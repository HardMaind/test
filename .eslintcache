[{"D:\\A Hardik\\A React js\\adminpanel\\src\\index.js":"1","D:\\A Hardik\\A React js\\adminpanel\\src\\serviceWorker.js":"2","D:\\A Hardik\\A React js\\adminpanel\\src\\context\\LayoutContext.js":"3","D:\\A Hardik\\A React js\\adminpanel\\src\\components\\App.js":"4","D:\\A Hardik\\A React js\\adminpanel\\src\\context\\UserContext.js":"5","D:\\A Hardik\\A React js\\adminpanel\\src\\themes\\index.js":"6","D:\\A Hardik\\A React js\\adminpanel\\src\\components\\Layout\\Layout.js":"7","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\login\\Login.js":"8","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\error\\Error.js":"9","D:\\A Hardik\\A React js\\adminpanel\\src\\themes\\default.js":"10","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\error\\styles.js":"11","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\login\\styles.js":"12","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\categorys\\updatecategory.js":"13","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\categorys\\addcategory.js":"14","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\products\\addproduct.js":"15","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\products\\updateproduct.js":"16","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\tables\\updateuser.js":"17","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\blogs\\updateblog.js":"18","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\blogs\\addblog.js":"19","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\tables\\adduser.js":"20","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\categorys\\Category.js":"21","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\products\\Products.js":"22","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\blogs\\Blogs.js":"23","D:\\A Hardik\\A React js\\adminpanel\\src\\components\\Layout\\styles.js":"24","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\tables\\Tables.js":"25","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\charts\\Charts.js":"26","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\icons\\Icons.js":"27","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\maps\\Maps.js":"28","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\notifications\\Notifications.js":"29","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\typography\\Typography.js":"30","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\dashboard\\Dashboard.js":"31","D:\\A Hardik\\A React js\\adminpanel\\src\\components\\Sidebar\\Sidebar.js":"32","D:\\A Hardik\\A React js\\adminpanel\\src\\components\\Header\\Header.js":"33","D:\\A Hardik\\A React js\\adminpanel\\src\\Services\\ApiService.js":"34","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\dashboard\\components\\Category\\Category.js":"35","D:\\A Hardik\\A React js\\adminpanel\\src\\components\\PageTitle\\PageTitle.js":"36","D:\\A Hardik\\A React js\\adminpanel\\src\\components\\Widget\\Widget.js":"37","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\icons\\styles.js":"38","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\dashboard\\mock.js":"39","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\dashboard\\styles.js":"40","D:\\A Hardik\\A React js\\adminpanel\\src\\components\\Sidebar\\styles.js":"41","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"42","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\dashboard\\components\\Table\\Table.js":"43","D:\\A Hardik\\A React js\\adminpanel\\src\\components\\Sidebar\\components\\Dot.js":"44","D:\\A Hardik\\A React js\\adminpanel\\src\\components\\Header\\styles.js":"45","D:\\A Hardik\\A React js\\adminpanel\\src\\components\\Notification\\Notification.js":"46","D:\\A Hardik\\A React js\\adminpanel\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"47","D:\\A Hardik\\A React js\\adminpanel\\src\\components\\Wrappers\\Wrappers.js":"48","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\typography\\styles.js":"49","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\notifications\\styles.js":"50","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\maps\\styles.js":"51","D:\\A Hardik\\A React js\\adminpanel\\src\\components\\UserAvatar\\UserAvatar.js":"52","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\charts\\components\\ApexHeatmap.js":"53","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\charts\\components\\ApexLineChart.js":"54","D:\\A Hardik\\A React js\\adminpanel\\src\\components\\Widget\\styles.js":"55","D:\\A Hardik\\A React js\\adminpanel\\src\\components\\PageTitle\\styles.js":"56","D:\\A Hardik\\A React js\\adminpanel\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"57","D:\\A Hardik\\A React js\\adminpanel\\src\\components\\Notification\\styles.js":"58","D:\\A Hardik\\A React js\\adminpanel\\src\\components\\UserAvatar\\styles.js":"59","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"60"},{"size":896,"mtime":1628510171719,"results":"61","hashOfConfig":"62"},{"size":5083,"mtime":1628510171748,"results":"63","hashOfConfig":"62"},{"size":1444,"mtime":1628510171718,"results":"64","hashOfConfig":"62"},{"size":1791,"mtime":1628510171704,"results":"65","hashOfConfig":"62"},{"size":3137,"mtime":1628748145674,"results":"66","hashOfConfig":"62"},{"size":534,"mtime":1628510171749,"results":"67","hashOfConfig":"62"},{"size":5334,"mtime":1628510171706,"results":"68","hashOfConfig":"62"},{"size":8745,"mtime":1628743182943,"results":"69","hashOfConfig":"62"},{"size":1626,"mtime":1628510171731,"results":"70","hashOfConfig":"62"},{"size":3127,"mtime":1628510171748,"results":"71","hashOfConfig":"62"},{"size":1395,"mtime":1628510171732,"results":"72","hashOfConfig":"62"},{"size":3283,"mtime":1628510171737,"results":"73","hashOfConfig":"62"},{"size":5326,"mtime":1628510171722,"results":"74","hashOfConfig":"62"},{"size":4817,"mtime":1628510171722,"results":"75","hashOfConfig":"62"},{"size":2976,"mtime":1628766317497,"results":"76","hashOfConfig":"62"},{"size":12755,"mtime":1628510171744,"results":"77","hashOfConfig":"62"},{"size":5427,"mtime":1628510171746,"results":"78","hashOfConfig":"62"},{"size":7328,"mtime":1628510171721,"results":"79","hashOfConfig":"62"},{"size":6777,"mtime":1628510171720,"results":"80","hashOfConfig":"62"},{"size":4654,"mtime":1628510171745,"results":"81","hashOfConfig":"62"},{"size":4901,"mtime":1628510171722,"results":"82","hashOfConfig":"62"},{"size":5208,"mtime":1628748344363,"results":"83","hashOfConfig":"62"},{"size":5143,"mtime":1628510171720,"results":"84","hashOfConfig":"62"},{"size":710,"mtime":1628510171707,"results":"85","hashOfConfig":"62"},{"size":4567,"mtime":1628510171745,"results":"86","hashOfConfig":"62"},{"size":5790,"mtime":1628510171723,"results":"87","hashOfConfig":"62"},{"size":391433,"mtime":1628510171735,"results":"88","hashOfConfig":"62"},{"size":1010,"mtime":1628510171738,"results":"89","hashOfConfig":"62"},{"size":13862,"mtime":1628510171740,"results":"90","hashOfConfig":"62"},{"size":4632,"mtime":1628510171747,"results":"91","hashOfConfig":"62"},{"size":16351,"mtime":1628510171725,"results":"92","hashOfConfig":"62"},{"size":3533,"mtime":1628510171710,"results":"93","hashOfConfig":"62"},{"size":10706,"mtime":1628510171705,"results":"94","hashOfConfig":"62"},{"size":4680,"mtime":1628510171703,"results":"95","hashOfConfig":"62"},{"size":1178,"mtime":1628510171728,"results":"96","hashOfConfig":"62"},{"size":447,"mtime":1628510171709,"results":"97","hashOfConfig":"62"},{"size":2581,"mtime":1628510171715,"results":"98","hashOfConfig":"62"},{"size":812,"mtime":1628510171736,"results":"99","hashOfConfig":"62"},{"size":3561,"mtime":1628510171729,"results":"100","hashOfConfig":"62"},{"size":3000,"mtime":1628510171730,"results":"101","hashOfConfig":"62"},{"size":1363,"mtime":1628510171713,"results":"102","hashOfConfig":"62"},{"size":4160,"mtime":1628510171726,"results":"103","hashOfConfig":"62"},{"size":1178,"mtime":1628510171728,"results":"104","hashOfConfig":"62"},{"size":902,"mtime":1628510171711,"results":"105","hashOfConfig":"62"},{"size":4043,"mtime":1628510171706,"results":"106","hashOfConfig":"62"},{"size":3413,"mtime":1628510171708,"results":"107","hashOfConfig":"62"},{"size":4589,"mtime":1628510171712,"results":"108","hashOfConfig":"62"},{"size":3971,"mtime":1628510171717,"results":"109","hashOfConfig":"62"},{"size":389,"mtime":1628510171747,"results":"110","hashOfConfig":"62"},{"size":1943,"mtime":1628510171742,"results":"111","hashOfConfig":"62"},{"size":178,"mtime":1628510171738,"results":"112","hashOfConfig":"62"},{"size":620,"mtime":1628510171714,"results":"113","hashOfConfig":"62"},{"size":1909,"mtime":1628510171724,"results":"114","hashOfConfig":"62"},{"size":1396,"mtime":1628510171724,"results":"115","hashOfConfig":"62"},{"size":1015,"mtime":1628510171716,"results":"116","hashOfConfig":"62"},{"size":482,"mtime":1628510171710,"results":"117","hashOfConfig":"62"},{"size":1474,"mtime":1628510171712,"results":"118","hashOfConfig":"62"},{"size":1040,"mtime":1628510171708,"results":"119","hashOfConfig":"62"},{"size":291,"mtime":1628510171715,"results":"120","hashOfConfig":"62"},{"size":1075,"mtime":1628510171726,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"1k6tbr3",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"124"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"124"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"124"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"124"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"124"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"124"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"124"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"124"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"124"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"124"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"124"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"124"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"124"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"124"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"124"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"D:\\A Hardik\\A React js\\adminpanel\\src\\index.js",[],["257","258"],"D:\\A Hardik\\A React js\\adminpanel\\src\\serviceWorker.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\context\\LayoutContext.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\components\\App.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\context\\UserContext.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\themes\\index.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\components\\Layout\\Layout.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\login\\Login.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\error\\Error.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\themes\\default.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\error\\styles.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\login\\styles.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\categorys\\updatecategory.js",["259","260","261","262","263","264","265","266","267","268","269","270"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Avatar,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport axios from \"axios\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Input } from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { ToastContainer, toast } from \"material-react-toastify\";\r\nimport \"material-react-toastify/dist/ReactToastify.css\";\r\n\r\nconst useStyles = makeStyles({\r\n  field: {\r\n    marginTop: 15,\r\n    marginBottom: 15,\r\n    display: \"block\",\r\n  },\r\n});\r\n\r\nexport default function UpdateCat() {\r\n  const [mydata, setMyData] = useState([]);\r\n\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const [files, setFiles] = useState(\r\n    \"https://www.generationsforpeace.org/wp-content/uploads/2018/03/empty.jpg\",\r\n  );\r\n  const serverBaseURI = \"http://localhost:8000\";\r\n\r\n  let { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await axios\r\n        .get(\"http://localhost:8000/category/\" + id)\r\n        .then((response) => {\r\n          setMyData(response.data.data);\r\n\r\n          setValue(\"image\", response.data.data.image);\r\n          setValue(\"title\", response.data.data.title);\r\n\r\n          setFiles(`${serverBaseURI}/${response.data.data.image}`);\r\n          console.log(\"my\", mydata);\r\n        });\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const paperStyle = { padding: \"30px 20px\", width: 500, margin: \"30px auto\" };\r\n  const headerStyle = { margin: 0 };\r\n  const avatarStyle = { backgroundColor: \"#1bbd7e\" };\r\n  const marginTop = { marginTop: 10 };\r\n\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const token = localStorage.getItem(\"id_token\");\r\n\r\n  const onSubmit = (data) => {\r\n    const formData = new FormData();\r\n    formData.append(\"image\", data.image);\r\n    formData.append(\"title\", data.title);\r\n\r\n    axios\r\n      .post(\r\n        \"http://localhost:8000/category_update/\" + id,\r\n\r\n        formData,\r\n\r\n        {\r\n          headers: { Authorization: `Basic ${token}` },\r\n        },\r\n      )\r\n      .then((response) => {\r\n        history.push(\"/app/categorys\");\r\n        toast.success(\"Category Added\");\r\n        console.log(response);\r\n        console.log(\"datas\", response.data);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid>\r\n      <Paper elevation={15} style={paperStyle}>\r\n        <ToastContainer />\r\n        <Grid align=\"center\">\r\n          <Avatar style={avatarStyle}>\r\n            <AddCircleOutlineOutlinedIcon />\r\n          </Avatar>\r\n          <h2 style={headerStyle}>Update Category</h2>\r\n        </Grid>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <Controller\r\n            name=\"title\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            render={({ field: { onChange, value }, fieldState: { error } }) => (\r\n              <TextField\r\n                className={classes.field}\r\n                label=\"Title\"\r\n                value={value}\r\n                fullWidth\r\n                onChange={onChange}\r\n                error={!!error}\r\n                placeholder=\"Enter your title\"\r\n                helperText={error ? error.message : null}\r\n              />\r\n            )}\r\n            rules={{ required: \"Title required\" }}\r\n          />\r\n          <Controller\r\n            name=\"image\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            render={({ field: { onChange }, fieldState: { error } }) => (\r\n              <TextField\r\n                className={classes.field}\r\n                fullWidth\r\n                onChange={(e) => {\r\n                  onChange(e.target.files[0]);\r\n                  // console.log(e.target.files[0]);\r\n\r\n                  setFiles(e.target.files[0]);\r\n                  const reader = new FileReader();\r\n                  reader.addEventListener(\"load\", () => {\r\n                    setFiles(reader.result);\r\n                  });\r\n                  reader.readAsDataURL(e.target.files[0]);\r\n                }}\r\n                error={!!error}\r\n                helperText={error ? error.message : null}\r\n                type=\"file\"\r\n              />\r\n            )}\r\n            rules={{ required: \"Image required\" }}\r\n          />\r\n\r\n          <img src={files} id=\"img\" width={90} height={90}></img>\r\n\r\n          <Box display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              style={marginTop}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Update Category\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\categorys\\addcategory.js",["271","272","273","274","275","276","277","278","279","280","281","282"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Avatar,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport axios from \"axios\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Input } from \"@material-ui/core\";\r\nimport { ToastContainer, toast } from \"material-react-toastify\";\r\nimport \"material-react-toastify/dist/ReactToastify.css\";\r\n\r\nconst useStyles = makeStyles({\r\n  field: {\r\n    marginTop: 15,\r\n    marginBottom: 15,\r\n    display: \"block\",\r\n  },\r\n});\r\n\r\nexport default function AddCategory() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const [files, setFiles] = useState(\r\n    \"https://www.generationsforpeace.org/wp-content/uploads/2018/03/empty.jpg\",\r\n  );\r\n\r\n  const paperStyle = { padding: \"30px 20px\", width: 500, margin: \"30px auto\" };\r\n  const headerStyle = { margin: 0 };\r\n  const avatarStyle = { backgroundColor: \"#1bbd7e\" };\r\n  const marginTop = { marginTop: 10 };\r\n  const token = localStorage.getItem(\"id_token\");\r\n\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const onSubmit = (data) => {\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"title\", data.title);\r\n    formData.append(\"image\", data.image);\r\n\r\n    console.log(formData);\r\n    console.log(formData.get(\"image\"));\r\n    console.log(formData.get(\"title\"));\r\n\r\n    axios\r\n      .post(\r\n        \"http://localhost:8000/category\",\r\n\r\n        formData,\r\n\r\n        {\r\n          headers: { Authorization: `Basic ${token}` },\r\n        },\r\n      )\r\n      .then((response) => {\r\n        history.push(\"categorys\");\r\n        // Swal.fire(\"Hello world!\");\r\n        toast.success(\"Category Added\");\r\n        // Swal.fire(\"Hello world!\");\r\n        console.log(response);\r\n        console.log(\"datas\", response.data);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid>\r\n      <Paper elevation={15} style={paperStyle}>\r\n        <ToastContainer />\r\n        <Grid align=\"center\">\r\n          <Avatar style={avatarStyle}>\r\n            <AddCircleOutlineOutlinedIcon />\r\n          </Avatar>\r\n          <h2 style={headerStyle}>Add Category</h2>\r\n        </Grid>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <Controller\r\n            name=\"title\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            render={({ field: { onChange, value }, fieldState: { error } }) => (\r\n              <TextField\r\n                className={classes.field}\r\n                label=\"Title\"\r\n                value={value}\r\n                fullWidth\r\n                onChange={onChange}\r\n                error={!!error}\r\n                placeholder=\"Enter your title\"\r\n                helperText={error ? error.message : null}\r\n              />\r\n            )}\r\n            rules={{ required: \"Title required\" }}\r\n          />\r\n          <Controller\r\n            name=\"image\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            render={({ field: { onChange }, fieldState: { error } }) => (\r\n              <TextField\r\n                className={classes.field}\r\n                fullWidth\r\n                onChange={(e) => {\r\n                  onChange(e.target.files[0]);\r\n                  // console.log(e.target.files[0]);\r\n\r\n                  setFiles(e.target.files[0]);\r\n                  const reader = new FileReader();\r\n                  reader.addEventListener(\"load\", () => {\r\n                    setFiles(reader.result);\r\n                  });\r\n                  reader.readAsDataURL(e.target.files[0]);\r\n                }}\r\n                error={!!error}\r\n                helperText={error ? error.message : null}\r\n                type=\"file\"\r\n              />\r\n            )}\r\n            rules={{ required: \"Image required\" }}\r\n          />\r\n\r\n          <img src={files} id=\"img\" width={90} height={90}></img>\r\n\r\n          <Box display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              style={marginTop}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Add User\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\products\\addproduct.js",["283","284","285"],"D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\products\\updateproduct.js",["286","287","288","289","290","291","292","293","294","295","296","297","298","299","300"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Avatar,\r\n  Typography,\r\n  TextField,\r\n  MenuItem,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport axios from \"axios\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Input } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"material-react-toastify\";\r\nimport \"material-react-toastify/dist/ReactToastify.css\";\r\n\r\nconst useStyles = makeStyles({\r\n  field: {\r\n    marginTop: 15,\r\n    marginBottom: 15,\r\n    display: \"block\",\r\n  },\r\n});\r\n\r\nexport default function UpdateProduct() {\r\n  let history = useHistory();\r\n\r\n  const [mydata, setMyData] = useState([]);\r\n  const [files, setFiles] = useState(\r\n    \"https://www.generationsforpeace.org/wp-content/uploads/2018/03/empty.jpg\",\r\n  );\r\n  const [dataValues, setdataValues] = useState([]);\r\n  const [preview, setPreview] = useState([]);\r\n  const fileobj = [];\r\n  const serverBaseURI = \"http://localhost:8000\";\r\n  const nums = [1, 2, 3, 4];\r\n  let { id } = useParams();\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:8000/category\", {\r\n        headers: { Authorization: \"Basic \" + localStorage.getItem(\"id_token\") },\r\n      })\r\n      .then((response) => {\r\n        setdataValues(response.data.data);\r\n        console.log(\"rss\", response.data.data);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await axios\r\n        .get(\"http://localhost:8000/product/\" + id)\r\n        .then((response) => {\r\n          console.log(\"res\", response.data.data);\r\n          setMyData(response.data.data);\r\n          setValue(\"price\", response.data.data.price);\r\n          setValue(\"category\", response.data.data.category);\r\n          setValue(\"description\", response.data.data.description);\r\n          setValue(\"image\", response.data.data.image);\r\n          setValue(\"title\", response.data.data.title);\r\n          setValue(\"content\", response.data.data.content);\r\n          setValue(\"quantity\", response.data.data.quantity);\r\n          console.log(\"ress\", response.data.data.image);\r\n\r\n          setPreview([\r\n            `${serverBaseURI}/${response.data.data.image[0]}`,\r\n            `${serverBaseURI}/${response.data.data.image[1]}`,\r\n            `${serverBaseURI}/${response.data.data.image[2]}`,\r\n          ]);\r\n\r\n          console.log(\"my\", mydata);\r\n        });\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // console.log(\"nm\", mydata.name);\r\n\r\n  const classes = useStyles();\r\n  const paperStyle = { padding: \"30px 20px\", width: 600, margin: \"30px auto\" };\r\n  const headerStyle = { margin: 0 };\r\n  const avatarStyle = { backgroundColor: \"#1bbd7e\" };\r\n  const marginTop = { marginTop: 10 };\r\n\r\n  const {\r\n    setValue,\r\n    handleSubmit,\r\n    control,\r\n\r\n    formState: { errors },\r\n  } = useForm();\r\n  const token = localStorage.getItem(\"id_token\");\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n    const formData = new FormData();\r\n    formData.append(\"title\", data.title);\r\n    formData.append(\"image\", data.image);\r\n    formData.append(\"category\", data.category);\r\n    formData.append(\"description\", data.description);\r\n    formData.append(\"price\", data.price);\r\n    formData.append(\"quantity\", data.quantity);\r\n    axios\r\n      .post(\r\n        \"http://localhost:8000/product_update/\" + id,\r\n\r\n        formData,\r\n\r\n        {\r\n          headers: { Authorization: `Basic ${token}` },\r\n        },\r\n      )\r\n      .then((response) => {\r\n        history.push(\"/app/products\");\r\n        toast.success(\"Prodcut Updated\");\r\n        console.log(response);\r\n        console.log(\"datas\", response.data);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid>\r\n      <Paper elevation={15} style={paperStyle}>\r\n        <ToastContainer />\r\n        <Grid align=\"center\">\r\n          <Avatar style={avatarStyle}>\r\n            <AddCircleOutlineOutlinedIcon />\r\n          </Avatar>\r\n          <h2 style={headerStyle}>Update Product</h2>\r\n        </Grid>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <Controller\r\n            name=\"title\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            render={({ field: { onChange, value }, fieldState: { error } }) => (\r\n              <TextField\r\n                className={classes.field}\r\n                label=\"Name\"\r\n                value={value}\r\n                fullWidth\r\n                onChange={onChange}\r\n                error={!!error}\r\n                placeholder=\"Enter your Name\"\r\n                helperText={error ? error.message : null}\r\n              />\r\n            )}\r\n          />\r\n          <Controller\r\n            name=\"image\"\r\n            className={classes.field}\r\n            control={control}\r\n            defaultValue=\"\"\r\n            render={({ field: { onChange }, fieldState: { error } }) => (\r\n              <input\r\n                style={{ marginTop: 15, marginBottom: 15, display: \"block\" }}\r\n                className={classes.field}\r\n                fullWidth\r\n                name=\"image\"\r\n                multiple\r\n                onChange={(e) => {\r\n                  onChange(e.target.files);\r\n                  let files = e.target.files;\r\n                  fileobj.push(files);\r\n                  let reader;\r\n\r\n                  for (var i = 0; i < fileobj[0].length; i++) {\r\n                    reader = new FileReader();\r\n                    reader.readAsDataURL(fileobj[0][i]);\r\n                    reader.onload = (e) => {\r\n                      preview.push(e.target.result); // update the array instead of replacing the entire value of preview\r\n\r\n                      setPreview([...preview]); // spread into a new array to trigger rerender\r\n                    };\r\n                  }\r\n\r\n                  // fileObj.push(e.target.files);\r\n                  // for (let i = 0; i < fileObj[0].length; i++) {\r\n                  //   fileArray.push(URL.createObjectURL(fileObj[0][i]));\r\n                  // }\r\n                  // setFiles({ files: fileArray });\r\n\r\n                  // console.log(e.target.files[0]);\r\n                  // if (e.target.files) {\r\n                  //   let filesAmount = e.target.files.length;\r\n                  //   let i;\r\n                  //   for (i = 0; i < filesAmount; i++) {\r\n                  //     let reader = new FileReader();\r\n                  //     reader.onload = function (ev) {\r\n                  //       setFiles(ev.target.result);\r\n                  //       // setMyFIle(ev.target.result);\r\n                  //       // setMyFl(ev.target.result);\r\n                  //       console.log(ev.target.result);\r\n                  //     };\r\n                  //     reader.readAsDataURL(e.target.files[i]);\r\n                  //   }\r\n                  // }\r\n                  // let files = Array.from(e.target.files);\r\n\r\n                  // files.forEach((file) => {\r\n                  //   let reader = new FileReader();\r\n                  //   reader.onloadend = () => {\r\n                  //     setImagesUrls([...imagesPreviewUrls, reader.result]);\r\n                  //   };\r\n                  //   // myArr.push(file);\r\n                  //   // console.log(myArr);\r\n                  //   reader.readAsDataURL(file);\r\n                  // });\r\n\r\n                  // setFiles(e.target.files[0]);\r\n                  // setMyFIle(e.target.files[1]);\r\n                  // setMyFl(e.target.files[2]);\r\n                  // const reader = new FileReader();\r\n                  // reader.addEventListener(\"load\", () => {\r\n                  //   setFiles(reader.result);\r\n                  //   // setMyFIle(reader.result);\r\n                  //   // setMyFl(reader.result);\r\n                  // });\r\n                  // reader.readAsDataURL(e.target.files[0]);\r\n                  // reader.readAsDataURL(e.target.files[1]);\r\n                  // reader.readAsDataURL(e.target.files[2]);\r\n                }}\r\n                error={!!error}\r\n                helperText={error ? error.message : null}\r\n                type=\"file\"\r\n              />\r\n            )}\r\n            rules={{ required: \"Image required\" }}\r\n          />\r\n\r\n          {(preview || []).map((url, index) => (\r\n            <img\r\n              src={url}\r\n              key={index}\r\n              style={{ marginLeft: \"10px\" }}\r\n              id=\"img\"\r\n              width={90}\r\n              height={90}\r\n            />\r\n          ))}\r\n          <Controller\r\n            name=\"description\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            render={({ field: { onChange, value }, fieldState: { error } }) => (\r\n              <TextField\r\n                className={classes.field}\r\n                label=\"Description\"\r\n                multiline\r\n                rows={3}\r\n                rowsMax={5}\r\n                value={value}\r\n                fullWidth\r\n                onChange={onChange}\r\n                error={!!error}\r\n                placeholder=\"Enter your description\"\r\n                helperText={error ? error.message : null}\r\n              />\r\n            )}\r\n          />\r\n          <Controller\r\n            name=\"category\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            render={({ field: { onChange, value }, fieldState: { error } }) => (\r\n              <TextField\r\n                select\r\n                className={classes.field}\r\n                label=\"Category\"\r\n                value={value}\r\n                fullWidth\r\n                onChange={onChange}\r\n                error={!!error}\r\n                placeholder=\"Enter Category\"\r\n                helperText={error ? error.message : null}\r\n              >\r\n                {dataValues.map((tags, index) => (\r\n                  <MenuItem key={index} value={tags.title}>\r\n                    {tags.title}\r\n                  </MenuItem>\r\n                ))}\r\n                {/* <MenuItem key={\"jani\"} value={\"jani\"}>\r\n                  {\"jani\"}\r\n                </MenuItem> */}\r\n              </TextField>\r\n            )}\r\n          />\r\n          {/* <Controller\r\n            name=\"category\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            render={({ field: { onChange, value }, fieldState: { error } }) => (\r\n              <TextField\r\n                className={classes.field}\r\n                label=\"Category\"\r\n                value={value}\r\n                fullWidth\r\n                onChange={onChange}\r\n                error={!!error}\r\n                placeholder=\"Enter your category\"\r\n                helperText={error ? error.message : null}\r\n              />\r\n            )}\r\n          /> */}\r\n          <Controller\r\n            name=\"price\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            render={({ field: { onChange, value }, fieldState: { error } }) => (\r\n              <TextField\r\n                className={classes.field}\r\n                label=\"Price\"\r\n                value={value}\r\n                fullWidth\r\n                onChange={onChange}\r\n                error={!!error}\r\n                placeholder=\"Enter your Username\"\r\n                helperText={error ? error.message : null}\r\n              />\r\n            )}\r\n          />\r\n          <Controller\r\n            name=\"quantity\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            render={({ field: { onChange, value }, fieldState: { error } }) => (\r\n              <TextField\r\n                className={classes.field}\r\n                label=\"Quantity\"\r\n                value={value}\r\n                fullWidth\r\n                onChange={onChange}\r\n                error={!!error}\r\n                placeholder=\"Enter your Username\"\r\n                helperText={error ? error.message : null}\r\n              />\r\n            )}\r\n          />\r\n\r\n          <Box display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              style={marginTop}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Update Product\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\tables\\updateuser.js",["301","302","303","304","305","306","307","308","309","310","311"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Avatar,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport axios from \"axios\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Input } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"material-react-toastify\";\r\nimport \"material-react-toastify/dist/ReactToastify.css\";\r\n\r\nconst useStyles = makeStyles({\r\n  field: {\r\n    marginTop: 15,\r\n    marginBottom: 15,\r\n    display: \"block\",\r\n  },\r\n});\r\n\r\nexport default function UpdateUser() {\r\n  let history = useHistory();\r\n  const [mydata, setMyData] = useState([]);\r\n  const classes = useStyles();\r\n\r\n  const paperStyle = { padding: \"30px 20px\", width: 600, margin: \"30px auto\" };\r\n  const headerStyle = { margin: 0 };\r\n  const avatarStyle = { backgroundColor: \"#1bbd7e\" };\r\n  const marginTop = { marginTop: 10 };\r\n\r\n  let { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await axios.get(\"http://localhost:8000/user/\" + id).then((response) => {\r\n        setMyData(response.data.data);\r\n        setValue(\"username\", response.data.data.name);\r\n        setValue(\"phoneno\", response.data.data.phoneno);\r\n        setValue(\"email\", response.data.data.email);\r\n        console.log(\"my\", mydata);\r\n      });\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  console.log(\"nm\", mydata.name);\r\n\r\n  console.log(\"names\", mydata);\r\n  const {\r\n    handleSubmit,\r\n    control,\r\n    setValue,\r\n\r\n    formState: { errors },\r\n  } = useForm({});\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n    console.log(\"mydata\", mydata);\r\n    axios\r\n      .post(\r\n        \"http://localhost:8000/user_update/\" + id,\r\n        {\r\n          name: data.username,\r\n          phoneno: data.phoneno,\r\n          email: data.email,\r\n          password: mydata.password,\r\n        },\r\n        // {\r\n        //   headers: { Authorization: `Basic ${token}` },\r\n        // }\r\n      )\r\n      .then((response) => {\r\n        history.push(\"/app/users\");\r\n        toast.success(\"User Updated\");\r\n        console.log(response);\r\n        console.log(\"datas\", response.data);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid>\r\n      <Paper elevation={15} style={paperStyle}>\r\n        <ToastContainer />\r\n        <Grid align=\"center\">\r\n          <Avatar style={avatarStyle}>\r\n            <AddCircleOutlineOutlinedIcon />\r\n          </Avatar>\r\n          <h2 style={headerStyle}>Update User</h2>\r\n        </Grid>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <Controller\r\n            name=\"username\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            render={({ field: { onChange, value }, fieldState: { error } }) => (\r\n              <TextField\r\n                className={classes.field}\r\n                label=\"Username\"\r\n                value={value}\r\n                fullWidth\r\n                onChange={onChange}\r\n                error={!!error}\r\n                placeholder=\"Enter your Username\"\r\n                helperText={error ? error.message : null}\r\n              />\r\n            )}\r\n            rules={{ required: \"Name required\" }}\r\n          />\r\n          <Controller\r\n            name=\"phoneno\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            render={({ field: { onChange, value }, fieldState: { error } }) => (\r\n              <TextField\r\n                className={classes.field}\r\n                label=\"Phoneno\"\r\n                value={value}\r\n                fullWidth\r\n                onChange={onChange}\r\n                error={!!error}\r\n                placeholder=\"Enter your Phone\"\r\n                helperText={error ? error.message : null}\r\n              />\r\n            )}\r\n            rules={{ required: \"Phone required\" }}\r\n          />\r\n          <Controller\r\n            name=\"email\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            render={({ field: { onChange, value }, fieldState: { error } }) => (\r\n              <TextField\r\n                className={classes.field}\r\n                label=\"Email\"\r\n                value={value}\r\n                fullWidth\r\n                onChange={onChange}\r\n                error={!!error}\r\n                placeholder=\"Enter your Email\"\r\n                helperText={error ? error.message : null}\r\n              />\r\n            )}\r\n            rules={{ required: \"Email required\" }}\r\n          />\r\n\r\n          <Box display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              style={marginTop}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Update User\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\blogs\\updateblog.js",["312","313","314","315","316","317","318","319","320","321","322","323"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Avatar,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport axios from \"axios\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Input } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"material-react-toastify\";\r\nimport \"material-react-toastify/dist/ReactToastify.css\";\r\n\r\nconst useStyles = makeStyles({\r\n  field: {\r\n    marginTop: 15,\r\n    marginBottom: 15,\r\n    display: \"block\",\r\n  },\r\n});\r\n\r\nexport default function UpdateBlog() {\r\n  const [mydata, setMyData] = useState([]);\r\n  const [files, setFiles] = useState(\r\n    \"https://www.generationsforpeace.org/wp-content/uploads/2018/03/empty.jpg\",\r\n  );\r\n  let history = useHistory();\r\n  const serverBaseURI = \"http://localhost:8000\";\r\n  const token = localStorage.getItem(\"id_token\");\r\n\r\n  let { id } = useParams();\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await axios.get(\"http://localhost:8000/blog/\" + id).then((response) => {\r\n        setMyData(response.data.data);\r\n        setValue(\"username\", response.data.data.username);\r\n        setValue(\"description\", response.data.data.description);\r\n        setValue(\"image\", response.data.data.image);\r\n        setValue(\"title\", response.data.data.title);\r\n        setValue(\"content\", response.data.data.content);\r\n        setFiles(`${serverBaseURI}/${response.data.data.image}`);\r\n        console.log(\"my\", mydata);\r\n      });\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  const paperStyle = { padding: \"30px 20px\", width: 600, margin: \"30px auto\" };\r\n  const headerStyle = { margin: 0 };\r\n  const avatarStyle = { backgroundColor: \"#1bbd7e\" };\r\n  const marginTop = { marginTop: 10 };\r\n\r\n  console.log(\"names\", mydata);\r\n  const {\r\n    setValue,\r\n    handleSubmit,\r\n    control,\r\n\r\n    formState: { errors },\r\n  } = useForm();\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n    const formData = new FormData();\r\n    formData.append(\"title\", data.title);\r\n    formData.append(\"image\", data.image);\r\n    formData.append(\"description\", data.description);\r\n    formData.append(\"username\", data.username);\r\n    formData.append(\"content\", data.content);\r\n    axios\r\n      .post(\r\n        \"http://localhost:8000/blog_update/\" + id,\r\n\r\n        formData,\r\n\r\n        {\r\n          headers: { Authorization: `Basic ${token}` },\r\n        },\r\n      )\r\n      .then((response) => {\r\n        history.push(\"/app/blogs\");\r\n        toast.success(\"Blog Added\");\r\n        console.log(response);\r\n        console.log(\"datas\", response.data);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid>\r\n      <Paper elevation={15} style={paperStyle}>\r\n        <ToastContainer />\r\n        <Grid align=\"center\">\r\n          <Avatar style={avatarStyle}>\r\n            <AddCircleOutlineOutlinedIcon />\r\n          </Avatar>\r\n          <h2 style={headerStyle}>Update User</h2>\r\n        </Grid>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <Controller\r\n            name=\"title\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            render={({ field: { onChange, value }, fieldState: { error } }) => (\r\n              <TextField\r\n                className={classes.field}\r\n                label=\"Name\"\r\n                value={value}\r\n                fullWidth\r\n                onChange={onChange}\r\n                error={!!error}\r\n                placeholder=\"Enter your Name\"\r\n                helperText={error ? error.message : null}\r\n              />\r\n            )}\r\n          />\r\n          <Controller\r\n            name=\"image\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            render={({ field: { onChange }, fieldState: { error } }) => (\r\n              <TextField\r\n                className={classes.field}\r\n                fullWidth\r\n                onChange={(e) => {\r\n                  onChange(e.target.files[0]);\r\n\r\n                  setFiles(e.target.files[0]);\r\n                  const reader = new FileReader();\r\n                  reader.addEventListener(\"load\", () => {\r\n                    setFiles(reader.result);\r\n                  });\r\n                  reader.readAsDataURL(e.target.files[0]);\r\n                }}\r\n                error={!!error}\r\n                helperText={error ? error.message : null}\r\n                type=\"file\"\r\n              />\r\n            )}\r\n          />\r\n          <img src={files} id=\"img\" width={80} height={80}></img>\r\n\r\n          <Controller\r\n            name=\"description\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            render={({ field: { onChange, value }, fieldState: { error } }) => (\r\n              <TextField\r\n                className={classes.field}\r\n                label=\"Description\"\r\n                multiline\r\n                rows={3}\r\n                rowsMax={5}\r\n                value={value}\r\n                fullWidth\r\n                onChange={onChange}\r\n                error={!!error}\r\n                placeholder=\"Enter your description\"\r\n                helperText={error ? error.message : null}\r\n              />\r\n            )}\r\n          />\r\n          <Controller\r\n            name=\"content\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            render={({ field: { onChange, value }, fieldState: { error } }) => (\r\n              <TextField\r\n                className={classes.field}\r\n                label=\"Content\"\r\n                value={value}\r\n                fullWidth\r\n                onChange={onChange}\r\n                error={!!error}\r\n                placeholder=\"Enter your Content\"\r\n                helperText={error ? error.message : null}\r\n              />\r\n            )}\r\n          />\r\n          <Controller\r\n            name=\"username\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            render={({ field: { onChange, value }, fieldState: { error } }) => (\r\n              <TextField\r\n                className={classes.field}\r\n                label=\"Username\"\r\n                value={value}\r\n                fullWidth\r\n                onChange={onChange}\r\n                error={!!error}\r\n                placeholder=\"Enter your Username\"\r\n                helperText={error ? error.message : null}\r\n              />\r\n            )}\r\n          />\r\n\r\n          <Box display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              style={marginTop}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Update Blog\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\blogs\\addblog.js",["324","325","326","327","328","329","330","331","332","333","334"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Avatar,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport axios from \"axios\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"material-react-toastify\";\r\nimport \"material-react-toastify/dist/ReactToastify.css\";\r\n\r\nconst useStyles = makeStyles({\r\n  field: {\r\n    marginTop: 15,\r\n    marginBottom: 15,\r\n    display: \"block\",\r\n  },\r\n});\r\n\r\nexport default function AddBlog() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const [files, setFiles] = useState(\r\n    \"https://www.generationsforpeace.org/wp-content/uploads/2018/03/empty.jpg\",\r\n  );\r\n\r\n  const paperStyle = { padding: \"30px 20px\", width: 600, margin: \"30px auto\" };\r\n  const headerStyle = { margin: 0 };\r\n  const avatarStyle = { backgroundColor: \"#1bbd7e\" };\r\n  const marginTop = { marginTop: 10 };\r\n\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const token = localStorage.getItem(\"id_token\");\r\n\r\n  const onSubmit = (data) => {\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"title\", data.title);\r\n    formData.append(\"image\", data.image);\r\n    formData.append(\"description\", data.description);\r\n    formData.append(\"username\", data.username);\r\n    formData.append(\"content\", data.content);\r\n\r\n    console.log(formData);\r\n    console.log(formData.get(\"image\"));\r\n    console.log(formData.get(\"title\"));\r\n\r\n    axios\r\n      .post(\r\n        \"http://localhost:8000/blog\",\r\n\r\n        formData,\r\n\r\n        {\r\n          headers: { Authorization: `Basic ${token}` },\r\n        },\r\n      )\r\n      .then((response) => {\r\n        history.push(\"blogs\");\r\n        toast.success(\"Blog Added\");\r\n        console.log(response);\r\n        console.log(\"datas\", response.data);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid>\r\n      <Paper elevation={15} style={paperStyle}>\r\n        <ToastContainer />\r\n        <Grid align=\"center\">\r\n          <Avatar style={avatarStyle}>\r\n            <AddCircleOutlineOutlinedIcon />\r\n          </Avatar>\r\n          <h2 style={headerStyle}>Add Blog</h2>\r\n        </Grid>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <Controller\r\n            name=\"title\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            render={({ field: { onChange, value }, fieldState: { error } }) => (\r\n              <TextField\r\n                className={classes.field}\r\n                label=\"Name\"\r\n                value={value}\r\n                fullWidth\r\n                onChange={onChange}\r\n                error={!!error}\r\n                placeholder=\"Enter your Name\"\r\n                helperText={error ? error.message : null}\r\n              />\r\n            )}\r\n            rules={{ required: \"Username required\" }}\r\n          />\r\n          <Controller\r\n            name=\"image\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            render={({ field: { onChange }, fieldState: { error } }) => (\r\n              <TextField\r\n                className={classes.field}\r\n                fullWidth\r\n                onChange={(e) => {\r\n                  onChange(e.target.files[0]);\r\n\r\n                  setFiles(e.target.files[0]);\r\n                  const reader = new FileReader();\r\n                  reader.addEventListener(\"load\", () => {\r\n                    setFiles(reader.result);\r\n                  });\r\n                  reader.readAsDataURL(e.target.files[0]);\r\n                }}\r\n                error={!!error}\r\n                helperText={error ? error.message : null}\r\n                type=\"file\"\r\n              />\r\n            )}\r\n            rules={{ required: \"Image required\" }}\r\n          />\r\n          <img src={files} id=\"img\" width={90} height={90}></img>\r\n\r\n          <Controller\r\n            name=\"description\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            render={({ field: { onChange, value }, fieldState: { error } }) => (\r\n              <TextField\r\n                className={classes.field}\r\n                label=\"Description\"\r\n                multiline\r\n                rows={3}\r\n                rowsMax={5}\r\n                value={value}\r\n                fullWidth\r\n                onChange={onChange}\r\n                error={!!error}\r\n                placeholder=\"Enter your description\"\r\n                helperText={error ? error.message : null}\r\n              />\r\n            )}\r\n            rules={{ required: \"Description required\" }}\r\n          />\r\n          <Controller\r\n            name=\"content\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            render={({ field: { onChange, value }, fieldState: { error } }) => (\r\n              <TextField\r\n                className={classes.field}\r\n                label=\"Content\"\r\n                value={value}\r\n                fullWidth\r\n                onChange={onChange}\r\n                error={!!error}\r\n                placeholder=\"Enter your Content\"\r\n                helperText={error ? error.message : null}\r\n              />\r\n            )}\r\n            rules={{ required: \"Content required\" }}\r\n          />\r\n          <Controller\r\n            name=\"username\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            render={({ field: { onChange, value }, fieldState: { error } }) => (\r\n              <TextField\r\n                className={classes.field}\r\n                label=\"Username\"\r\n                value={value}\r\n                fullWidth\r\n                onChange={onChange}\r\n                error={!!error}\r\n                placeholder=\"Enter your Username\"\r\n                helperText={error ? error.message : null}\r\n              />\r\n            )}\r\n            rules={{ required: \"Username required\" }}\r\n          />\r\n\r\n          <Box display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              style={marginTop}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Add Blog\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\tables\\adduser.js",["335","336","337","338","339","340","341","342"],"import React from \"react\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Avatar,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport axios from \"axios\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"material-react-toastify\";\r\nimport \"material-react-toastify/dist/ReactToastify.css\";\r\n\r\nconst useStyles = makeStyles({\r\n  field: {\r\n    marginTop: 15,\r\n    marginBottom: 15,\r\n    display: \"block\",\r\n  },\r\n});\r\n\r\nexport default function AddUser() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const paperStyle = { padding: \"30px 20px\", width: 600, margin: \"30px auto\" };\r\n  const headerStyle = { margin: 0 };\r\n  const avatarStyle = { backgroundColor: \"#1bbd7e\" };\r\n  const marginTop = { marginTop: 10 };\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n    axios\r\n      .post(\r\n        \"http://localhost:8000/adduser\",\r\n        {\r\n          email: data.email,\r\n          name: data.username,\r\n          phoneno: data.phoneno,\r\n          password: data.password,\r\n        },\r\n        // {\r\n        //   headers: { Authorization: `Basic ${token}` },\r\n        // }\r\n      )\r\n      .then((response) => {\r\n        history.push(\"users\");\r\n        toast.success(\"User Added\");\r\n\r\n        console.log(response);\r\n        console.log(\"datas\", response.data);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid>\r\n      <Paper elevation={15} style={paperStyle}>\r\n        <ToastContainer />\r\n        <Grid align=\"center\">\r\n          <Avatar style={avatarStyle}>\r\n            <AddCircleOutlineOutlinedIcon />\r\n          </Avatar>\r\n          <h2 style={headerStyle}>Add User</h2>\r\n        </Grid>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <TextField\r\n            className={classes.field}\r\n            fullWidth\r\n            label=\"Name\"\r\n            name=\"username\"\r\n            placeholder=\"Enter your name\"\r\n            {...register(\"username\", { required: true, maxLength: 20 })}\r\n          />\r\n          {errors.username && errors.username.type === \"required\" && (\r\n            <span style={{ color: \"red\" }} role=\"alert\">\r\n              UserName is required\r\n            </span>\r\n          )}\r\n\r\n          <TextField\r\n            className={classes.field}\r\n            fullWidth\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            {...register(\"email\", { required: true, maxLength: 20 })}\r\n          />\r\n          {errors.email && errors.email.type === \"required\" && (\r\n            <span style={{ color: \"red\" }} role=\"alert\">\r\n              Email is required\r\n            </span>\r\n          )}\r\n\r\n          <TextField\r\n            className={classes.field}\r\n            fullWidth\r\n            label=\"Phone Number\"\r\n            name=\"phoneno\"\r\n            placeholder=\"Enter your phone number\"\r\n            {...register(\"phoneno\", {\r\n              required: true,\r\n            })}\r\n          />\r\n          {errors.phoneno && errors.phoneno.type === \"required\" && (\r\n            <span style={{ color: \"red\" }} role=\"alert\">\r\n              Phoneno is required\r\n            </span>\r\n          )}\r\n\r\n          <TextField\r\n            className={classes.field}\r\n            fullWidth\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            {...register(\"password\", { required: true, maxLength: 20 })}\r\n          />\r\n          {errors.password && errors.password.type === \"required\" && (\r\n            <span style={{ color: \"red\" }} role=\"alert\">\r\n              Password is required\r\n            </span>\r\n          )}\r\n\r\n        \r\n          <Box display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              style={marginTop}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Add User\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\categorys\\Category.js",["343","344","345","346","347","348","349","350","351"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport axios from \"axios\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Image from \"material-ui-image\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\r\n\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport { ToastContainer, toast } from \"material-react-toastify\";\r\nimport \"material-react-toastify/dist/ReactToastify.css\";\r\nimport { deleteCat, deleteAllCat } from \"../../Services/ApiService\";\r\n\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport Category from \"../dashboard/components/Category/Category\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst useStyles = makeStyles(() => {\r\n  return {\r\n    large: {\r\n      height: `54px !important`,\r\n      width: `54px !important`,\r\n    },\r\n    titleItemRight: {\r\n      transform: \"translateY(-40%)\",\r\n      align: \"right\",\r\n    },\r\n  };\r\n});\r\n\r\nexport default function Categorys() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n\r\n  const [dataValues, setdataValues] = useState([]);\r\n  const serverBaseURI = \"http://localhost:8000\";\r\n\r\n  useEffect(() => {\r\n    list();\r\n  }, []);\r\n  const list = () => {\r\n    axios\r\n      .get(\"http://localhost:8000/category\", {\r\n        headers: { Authorization: \"Basic \" + localStorage.getItem(\"id_token\") },\r\n      })\r\n      .then((response) => {\r\n        setdataValues(response.data.data);\r\n        console.log(response.data);\r\n      });\r\n  };\r\n\r\n  const deleteCategory = (uid) => {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You will not be able to recover this imaginary file!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"Yes, delete it!\",\r\n      cancelButtonText: \"No, keep it\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        return (\r\n          deleteCat(uid, () => {\r\n            list();\r\n          }),\r\n          Swal.fire(\r\n            \"Deleted!\",\r\n            \"Your imaginary file has been deleted.\",\r\n            \"success\",\r\n          )\r\n        );\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        Swal.fire(\"Cancelled\", \"Your imaginary file is safe :)\", \"error\");\r\n      }\r\n    });\r\n  };\r\n  const deleteRows = (RowsDeleted, data) => {\r\n    const ids = RowsDeleted.data.map((d) => d.dataIndex);\r\n\r\n    let indexes = [];\r\n    const arr = [];\r\n    for (let i = 0; i < dataValues.length; i++) {\r\n      indexes.push(i);\r\n    }\r\n    const cmn = indexes.filter((element) => {\r\n      if (ids.includes(element)) {\r\n        arr.push(element);\r\n      }\r\n    });\r\n    const usr = [];\r\n    arr.map((index) => {\r\n      var values = dataValues[index];\r\n      usr.push(values._id);\r\n      var data_ids = values._id;\r\n    });\r\n    console.log(usr, \"usr\");\r\n    const token = localStorage.getItem(\"id_token\");\r\n    deleteAllCat(\r\n      usr,\r\n      token,\r\n      () => {\r\n        list();\r\n        toast.error(\"Deleted\");\r\n      },\r\n      (err) => {\r\n        alert(err);\r\n      },\r\n    );\r\n  };\r\n\r\n  const rows = dataValues.map((user) => {\r\n    return {\r\n      title: user.title,\r\n      image: (\r\n        <div>\r\n          <img\r\n            className={classes.large}\r\n            src={`${serverBaseURI}/${user.image}`}\r\n            alt={user.image}\r\n          />\r\n        </div>\r\n      ),\r\n\r\n      action: (\r\n        <div>\r\n          <EditIcon\r\n            onClick={() => history.push(\"updatecategory/\" + user._id)}\r\n          />\r\n\r\n          <DeleteIcon onClick={() => deleteCategory(user._id)} />\r\n        </div>\r\n      ),\r\n    };\r\n  });\r\n  const columns = [\r\n    { name: \"title\", label: \"Name\" },\r\n    {\r\n      name: \"image\",\r\n      label: \"Image\",\r\n    },\r\n    { name: \"action\", label: \"Action\" },\r\n  ];\r\n\r\n  console.log(\"mydatasss\", dataValues);\r\n  console.log(\"Basic \" + localStorage.getItem(\"id_token\"));\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Categorys\" />\r\n      <ToastContainer />\r\n\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={8}>\r\n          <Button\r\n            className={classes.titleItemRight}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => history.push(\"/app/addcategory\")}\r\n          >\r\n            Add New\r\n          </Button>\r\n          <MUIDataTable\r\n            title=\"Category\"\r\n            data={rows}\r\n            columns={columns}\r\n            options={{\r\n              filterType: \"checkbox\",\r\n              onRowsDelete: deleteRows,\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\products\\Products.js",["352","353","354","355","356","357","358","359","360","361"],"D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\blogs\\Blogs.js",["362","363","364","365","366","367","368","369","370","371","372"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport axios from \"axios\";\r\nimport mock from \"../dashboard/mock\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { ToastContainer, toast } from \"material-react-toastify\";\r\nimport \"material-react-toastify/dist/ReactToastify.css\";\r\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport {\r\n  getAllBlog,\r\n  deleteAllBlog,\r\n  deleteBlog,\r\n} from \"../../Services/ApiService\";\r\n\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tableOverflow: {\r\n    overflow: \"auto\",\r\n  },\r\n  large: {\r\n    height: `54px !important`,\r\n    width: `54px !important`,\r\n  },\r\n  titleItemRight: {\r\n    transform: \"translateY(-40%)\",\r\n    align: \"right\",\r\n  },\r\n}));\r\n\r\nexport default function Blogs() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const token = localStorage.getItem(\"id_token\");\r\n  const serverBaseURI = \"http://localhost:8000\";\r\n\r\n  const [dataValues, setdataValues] = useState([]);\r\n\r\n  useEffect(() => {\r\n    list();\r\n  }, []);\r\n\r\n  const list = () => {\r\n    getAllBlog(\r\n      (response) => {\r\n        setdataValues(response.data.data);\r\n        console.log(response.data);\r\n      },\r\n      (err) => {\r\n        alert(err);\r\n      },\r\n    );\r\n  };\r\n\r\n  const deleteBlogs = (uid) => {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You will not be able to recover this imaginary file!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"Yes, delete it!\",\r\n      cancelButtonText: \"No, keep it\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        return (\r\n          deleteBlog(uid, () => {\r\n            list();\r\n          }),\r\n          Swal.fire(\r\n            \"Deleted!\",\r\n            \"Your imaginary file has been deleted.\",\r\n            \"success\",\r\n          )\r\n        );\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        Swal.fire(\"Cancelled\", \"Your imaginary file is safe :)\", \"error\");\r\n      }\r\n    });\r\n  };\r\n  const deleteRows = (RowsDeleted, data) => {\r\n    const ids = RowsDeleted.data.map((d) => d.dataIndex);\r\n\r\n    let indexes = [];\r\n    const arr = [];\r\n    for (let i = 0; i < dataValues.length; i++) {\r\n      indexes.push(i);\r\n    }\r\n    const cmn = indexes.filter((element) => {\r\n      if (ids.includes(element)) {\r\n        arr.push(element);\r\n      }\r\n    });\r\n    const usr = [];\r\n    arr.map((index) => {\r\n      var values = dataValues[index];\r\n      usr.push(values._id);\r\n      var data_ids = values._id;\r\n    });\r\n    console.log(usr, \"usr\");\r\n    const token = localStorage.getItem(\"id_token\");\r\n    deleteAllBlog(\r\n      usr,\r\n      token,\r\n      () => {\r\n        list();\r\n        toast.error(\"Deleted\");\r\n      },\r\n      (err) => {\r\n        alert(err);\r\n      },\r\n    );\r\n  };\r\n\r\n  const rows = dataValues.map((user) => {\r\n    return {\r\n      title: user.title,\r\n      image: (\r\n        <div>\r\n          <img\r\n            className={classes.large}\r\n            src={`${serverBaseURI}/${user.image}`}\r\n            alt={user.image}\r\n          />\r\n        </div>\r\n      ),\r\n      description: user.description,\r\n      content: user.content,\r\n      username: user.username,\r\n\r\n      action: (\r\n        <div>\r\n          <EditIcon\r\n            onClick={() => history.push(\"/app/updateblog/\" + user._id)}\r\n          />\r\n\r\n          <DeleteIcon onClick={() => deleteBlogs(user._id)} />\r\n        </div>\r\n      ),\r\n    };\r\n  });\r\n\r\n  console.log(\"mydatasss\", dataValues);\r\n  console.log(\"Basic \" + localStorage.getItem(\"id_token\"));\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Blogs\" />\r\n      <ToastContainer />\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          <Button\r\n            className={classes.titleItemRight}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => history.push(\"/app/addblog\")}\r\n          >\r\n            Add New\r\n          </Button>\r\n          <MUIDataTable\r\n            title=\"All Blogs\"\r\n            data={rows}\r\n            columns={[\r\n              { name: \"title\", label: \"Title\" },\r\n              { name: \"image\", label: \"Image\" },\r\n              { name: \"description\", label: \"Description\" },\r\n              { name: \"content\", label: \"Content\" },\r\n              { name: \"username\", label: \"Username\" },\r\n              { name: \"action\", label: \"Action\" },\r\n            ]}\r\n            options={{\r\n              filterType: \"checkbox\",\r\n              onRowsDelete: deleteRows,\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","D:\\A Hardik\\A React js\\adminpanel\\src\\components\\Layout\\styles.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\tables\\Tables.js",["373","374","375","376","377","378","379","380","381","382"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport axios from \"axios\";\r\nimport mock from \"../dashboard/mock\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { ToastContainer, toast } from \"material-react-toastify\";\r\nimport \"material-react-toastify/dist/ReactToastify.css\";\r\nimport { getAllUser, deleteUsr, deleteAllUsr } from \"../../Services/ApiService\";\r\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tableOverflow: {\r\n    overflow: \"auto\",\r\n  },\r\n  titleItemRight: {\r\n    transform: \"translateY(-40%)\",\r\n    align: \"right\",\r\n  },\r\n}));\r\n\r\nexport default function Tables() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n\r\n  const [dataValues, setdataValues] = useState([]);\r\n\r\n  useEffect(() => {\r\n    list();\r\n  }, []);\r\n\r\n  const list = () => {\r\n    getAllUser(\r\n      (response) => {\r\n        setdataValues(response.data.data);\r\n        console.log(response.data);\r\n      },\r\n      (err) => {\r\n        alert(err);\r\n      },\r\n    );\r\n  };\r\n\r\n  const deleteUser = (uid) => {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You will not be able to recover this imaginary file!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"Yes, delete it!\",\r\n      cancelButtonText: \"No, keep it\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        return (\r\n          deleteUsr(uid, () => {\r\n            list();\r\n          }),\r\n          Swal.fire(\r\n            \"Deleted!\",\r\n            \"Your imaginary file has been deleted.\",\r\n            \"success\",\r\n          )\r\n        );\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        Swal.fire(\"Cancelled\", \"Your imaginary file is safe :)\", \"error\");\r\n      }\r\n    });\r\n  };\r\n  const token = localStorage.getItem(\"id_token\");\r\n\r\n  const deleteRows = (RowsDeleted, data) => {\r\n    const ids = RowsDeleted.data.map((d) => d.dataIndex);\r\n\r\n    let indexes = [];\r\n    const arr = [];\r\n    for (let i = 0; i < dataValues.length; i++) {\r\n      indexes.push(i);\r\n    }\r\n    const cmn = indexes.filter((element) => {\r\n      if (ids.includes(element)) {\r\n        arr.push(element);\r\n      }\r\n    });\r\n    const usr = [];\r\n    arr.map((index) => {\r\n      var values = dataValues[index];\r\n      usr.push(values._id);\r\n      var data_ids = values._id;\r\n    });\r\n    console.log(usr, \"usr\");\r\n    deleteAllUsr(\r\n      usr,\r\n      token,\r\n      () => {\r\n        list();\r\n        toast.error(\"Deleted\");\r\n      },\r\n      (err) => {\r\n        alert(err);\r\n      },\r\n    );\r\n  };\r\n\r\n  const rows = dataValues.map((user) => {\r\n    return {\r\n      name: user.name,\r\n      email: user.email,\r\n      phoneno: user.phoneno,\r\n\r\n      action: (\r\n        <div>\r\n          <EditIcon\r\n            onClick={() => history.push(\"/app/updateuser/\" + user._id)}\r\n          />\r\n\r\n          <DeleteIcon onClick={() => deleteUser(user._id)} />\r\n        </div>\r\n      ),\r\n    };\r\n  });\r\n\r\n  console.log(\"mydatasss\", dataValues);\r\n  console.log(\"Basic \" + localStorage.getItem(\"id_token\"));\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Users\" />\r\n      <ToastContainer />\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          <Button\r\n            className={classes.titleItemRight}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => history.push(\"/app/adduser\")}\r\n          >\r\n            Add New\r\n          </Button>\r\n          <MUIDataTable\r\n            title=\"User List\"\r\n            data={rows}\r\n            columns={[\r\n              { name: \"name\", label: \"Name\" },\r\n              { name: \"phoneno\", label: \"Contact\" },\r\n              { name: \"email\", label: \"Email\" },\r\n              { name: \"action\", label: \"Action\" },\r\n            ]}\r\n            options={{\r\n              filterType: \"checkbox\",\r\n              onRowsDelete: deleteRows,\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\charts\\Charts.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\icons\\Icons.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\maps\\Maps.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\notifications\\Notifications.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\typography\\Typography.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\dashboard\\Dashboard.js",["383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407"],"import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  LinearProgress,\r\n  Select,\r\n  OutlinedInput,\r\n  MenuItem,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport {\r\n  ResponsiveContainer,\r\n  ComposedChart,\r\n  AreaChart,\r\n  LineChart,\r\n  Line,\r\n  Area,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  YAxis,\r\n  XAxis,\r\n} from \"recharts\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport mock from \"./mock\";\r\nimport Widget from \"../../components/Widget\";\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\nimport Table from \"./components/Table/Table\";\r\nimport BigStat from \"./components/BigStat/BigStat\";\r\n\r\nconst mainChartData = getMainChartData();\r\nconst PieChartData = [\r\n  { name: \"Group A\", value: 400, color: \"primary\" },\r\n  { name: \"Group B\", value: 300, color: \"secondary\" },\r\n  { name: \"Group C\", value: 300, color: \"warning\" },\r\n  { name: \"Group D\", value: 200, color: \"success\" },\r\n];\r\n\r\nexport default function Dashboard(props) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // local\r\n  var [mainChartState, setMainChartState] = useState(\"monthly\");\r\n\r\n  return (\r\n    <>\r\n      <PageTitle\r\n        title=\"Dashboard\"\r\n        button={\r\n          <Button variant=\"contained\" size=\"medium\" color=\"secondary\">\r\n            Latest Reports\r\n          </Button>\r\n        }\r\n      />\r\n      <Grid container spacing={4}>\r\n        {/* <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"Visits Today\"\r\n            upperTitle\r\n            bodyClass={classes.fullHeightBody}\r\n            className={classes.card}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n                  <Typography size=\"xl\" weight=\"medium\" noWrap>\r\n                    12, 678\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <LineChart\r\n                    width={100}\r\n                    height={30}\r\n                    data={[\r\n                      { value: 10 },\r\n                      { value: 15 },\r\n                      { value: 10 },\r\n                      { value: 17 },\r\n                      { value: 18 },\r\n                    ]}\r\n                  >\r\n                    <Line\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.success.main}\r\n                      strokeWidth={2}\r\n                      dot={false}\r\n                    />\r\n                  </LineChart>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item xs={4}>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\r\n                  Registrations\r\n                </Typography>\r\n                <Typography size=\"md\">860</Typography>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\r\n                  Sign Out\r\n                </Typography>\r\n                <Typography size=\"md\">32</Typography>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\r\n                  Rate\r\n                </Typography>\r\n                <Typography size=\"md\">3.25%</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Widget>\r\n        </Grid> */}\r\n        {/* <Grid item lg={3} md={8} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"App Performance\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.performanceLegendWrapper}>\r\n              <div className={classes.legendElement}>\r\n                <Dot color=\"warning\" />\r\n                <Typography\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                  className={classes.legendElementText}\r\n                >\r\n                  Integration\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.legendElement}>\r\n                <Dot color=\"primary\" />\r\n                <Typography\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                  className={classes.legendElementText}\r\n                >\r\n                  SDK\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n            <div className={classes.progressSection}>\r\n              <Typography\r\n                size=\"md\"\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.progressSectionTitle}\r\n              >\r\n                Integration\r\n              </Typography>\r\n              <LinearProgress\r\n                variant=\"determinate\"\r\n                value={77}\r\n                classes={{ barColorPrimary: classes.progressBarPrimary }}\r\n                className={classes.progress}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Typography\r\n                size=\"md\"\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.progressSectionTitle}\r\n              >\r\n                SDK\r\n              </Typography>\r\n              <LinearProgress\r\n                variant=\"determinate\"\r\n                value={73}\r\n                classes={{ barColorPrimary: classes.progressBarWarning }}\r\n                className={classes.progress}\r\n              />\r\n            </div>\r\n          </Widget>\r\n        </Grid> */}\r\n        {/* <Grid item lg={3} md={8} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"Server Overview\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                60% / 37°С / 3.3 Ghz\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.secondary.main}\r\n                      fill={theme.palette.secondary.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                54% / 31°С / 3.3 Ghz\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.primary.main}\r\n                      fill={theme.palette.primary.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                57% / 21°С / 3.3 Ghz\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.warning.main}\r\n                      fill={theme.palette.warning.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n          </Widget>\r\n        </Grid> */}\r\n        {/* {/* <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Widget title=\"Revenue Breakdown\" upperTitle className={classes.card}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <ResponsiveContainer width=\"100%\" height={144}>\r\n                  <PieChart>\r\n                    <Pie\r\n                      data={PieChartData}\r\n                      innerRadius={30}\r\n                      outerRadius={40}\r\n                      dataKey=\"value\"\r\n                    >\r\n                      {PieChartData.map((entry, index) => (\r\n                        <Cell\r\n                          key={`cell-${index}`}\r\n                          fill={theme.palette[entry.color].main}\r\n                        />\r\n                      ))}\r\n                    </Pie>\r\n                  </PieChart>\r\n                </ResponsiveContainer>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <div className={classes.pieChartLegendWrapper}>\r\n                  {PieChartData.map(({ name, value, color }, index) => (\r\n                    <div key={color} className={classes.legendItemContainer}>\r\n                      <Dot color={color} />\r\n                      <Typography\r\n                        style={{ whiteSpace: \"nowrap\", fontSize: 12 }}\r\n                      >\r\n                        &nbsp;{name}&nbsp;\r\n                      </Typography>\r\n                      <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                        &nbsp;{value}\r\n                      </Typography>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </Widget>\r\n        </Grid> */}\r\n        {/* <Grid item xs={12}>\r\n          <Widget\r\n            bodyClass={classes.mainChartBody}\r\n            header={\r\n              <div className={classes.mainChartHeader}>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                >\r\n                  Daily Line Chart\r\n                </Typography>\r\n                <div className={classes.mainChartHeaderLabels}>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"warning\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Tablet\r\n                    </Typography>\r\n                  </div>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"primary\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Mobile\r\n                    </Typography>\r\n                  </div>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"secondary\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Desktop\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n                <Select\r\n                  value={mainChartState}\r\n                  onChange={(e) => setMainChartState(e.target.value)}\r\n                  input={\r\n                    <OutlinedInput\r\n                      labelWidth={0}\r\n                      classes={{\r\n                        notchedOutline: classes.mainChartSelectRoot,\r\n                        input: classes.mainChartSelect,\r\n                      }}\r\n                    />\r\n                  }\r\n                  autoWidth\r\n                >\r\n                  <MenuItem value=\"daily\">Daily</MenuItem>\r\n                  <MenuItem value=\"weekly\">Weekly</MenuItem>\r\n                  <MenuItem value=\"monthly\">Monthly</MenuItem>\r\n                </Select>\r\n              </div>\r\n            }\r\n          >\r\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\r\n              <ComposedChart\r\n                margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\r\n                data={mainChartData}\r\n              >\r\n                <YAxis\r\n                  ticks={[0, 2500, 5000, 7500]}\r\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\r\n                  stroke={theme.palette.text.hint + \"80\"}\r\n                  tickLine={false}\r\n                />\r\n                <XAxis\r\n                  tickFormatter={(i) => i + 1}\r\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\r\n                  stroke={theme.palette.text.hint + \"80\"}\r\n                  tickLine={false}\r\n                />\r\n                <Area\r\n                  type=\"natural\"\r\n                  dataKey=\"desktop\"\r\n                  fill={theme.palette.background.light}\r\n                  strokeWidth={0}\r\n                  activeDot={false}\r\n                />\r\n                <Line\r\n                  type=\"natural\"\r\n                  dataKey=\"mobile\"\r\n                  stroke={theme.palette.primary.main}\r\n                  strokeWidth={2}\r\n                  dot={false}\r\n                  activeDot={false}\r\n                />\r\n                <Line\r\n                  type=\"linear\"\r\n                  dataKey=\"tablet\"\r\n                  stroke={theme.palette.warning.main}\r\n                  strokeWidth={2}\r\n                  dot={{\r\n                    stroke: theme.palette.warning.dark,\r\n                    strokeWidth: 2,\r\n                    fill: theme.palette.warning.main,\r\n                  }}\r\n                />\r\n              </ComposedChart>\r\n            </ResponsiveContainer>\r\n          </Widget>\r\n        </Grid> */}\r\n        {mock.bigStat.map((stat) => (\r\n          <Grid item md={4} sm={6} xs={12} key={stat.product}>\r\n            <BigStat {...stat} />\r\n          </Grid>\r\n        ))}\r\n        {/* <Grid item xs={12}>\r\n          <Widget\r\n            title=\"Support Requests\"\r\n            upperTitle\r\n            noBodyPadding\r\n            bodyClass={classes.tableWidget}\r\n          >\r\n            <Table data={mock.table} />\r\n          </Widget>\r\n        </Grid> */}\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\n// #######################################################################\r\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\r\n  var array = new Array(length).fill();\r\n  let lastValue;\r\n\r\n  return array.map((item, index) => {\r\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\r\n\r\n    while (\r\n      randomValue <= min ||\r\n      randomValue >= max ||\r\n      (lastValue && randomValue - lastValue > maxDiff)\r\n    ) {\r\n      randomValue = Math.floor(Math.random() * multiplier + 1);\r\n    }\r\n\r\n    lastValue = randomValue;\r\n\r\n    return { value: randomValue };\r\n  });\r\n}\r\n\r\nfunction getMainChartData() {\r\n  var resultArray = [];\r\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\r\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\r\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\r\n\r\n  for (let i = 0; i < tablet.length; i++) {\r\n    resultArray.push({\r\n      tablet: tablet[i].value,\r\n      desktop: desktop[i].value,\r\n      mobile: mobile[i].value,\r\n    });\r\n  }\r\n\r\n  return resultArray;\r\n}\r\n","D:\\A Hardik\\A React js\\adminpanel\\src\\components\\Sidebar\\Sidebar.js",["408","409","410","411","412","413","414","415"],"import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport {\r\n  Home as HomeIcon,\r\n  Category as CategoryIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  FormatSize as TypographyIcon,\r\n  FilterNone as UIElementsIcon,\r\n  BorderAll as TableIcon,\r\n  QuestionAnswer as SupportIcon,\r\n  LibraryBooks as LibraryIcon,\r\n  HelpOutline as FAQIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  Person as PersonIcon,\r\n  Loyalty as LoyaltyIcon,\r\n  Book as BookIcon,\r\n} from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\nimport Dot from \"./components/Dot\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\n\r\nconst structure = [\r\n  { id: 0, label: \"Dashboard\", link: \"/app/dashboard\", icon: <HomeIcon /> },\r\n\r\n  { id: 1, label: \"Users\", link: \"/app/users\", icon: <PersonIcon /> },\r\n\r\n  {\r\n    id: 2,\r\n    label: \"Category\",\r\n    link: \"/app/categorys\",\r\n    icon: <CategoryIcon />,\r\n  },\r\n  {\r\n    id: 3,\r\n    label: \"Product\",\r\n    link: \"/app/products\",\r\n    icon: <LoyaltyIcon />,\r\n  },\r\n  {\r\n    id: 4,\r\n    label: \"Blog\",\r\n    link: \"/app/blogs\",\r\n    icon: <BookIcon />,\r\n  },\r\n];\r\n\r\nfunction Sidebar({ location }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // global\r\n  var { isSidebarOpened } = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n\r\n  useEffect(function () {\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Drawer\r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.mobileBackButton}>\r\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\r\n          <ArrowBackIcon\r\n            classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.sidebarList}>\r\n        {structure.map((link) => (\r\n          <SidebarLink\r\n            key={link.id}\r\n            location={location}\r\n            isSidebarOpened={isSidebarOpened}\r\n            {...link}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n\r\n  // ##################################################################\r\n  function handleWindowWidthChange() {\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen && isPermanent) {\r\n      setPermanent(false);\r\n    } else if (!isSmallScreen && !isPermanent) {\r\n      setPermanent(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","D:\\A Hardik\\A React js\\adminpanel\\src\\components\\Header\\Header.js",["416","417","418"],"import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Menu,\r\n  MenuItem,\r\n  Fab,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  Menu as MenuIcon,\r\n  MailOutline as MailIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Person as AccountIcon,\r\n  Search as SearchIcon,\r\n  Send as SendIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { Badge, Typography, Button } from \"../Wrappers\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserDispatch } from \"../../context/UserContext\";\r\n\r\nconst messages = [\r\n  {\r\n    id: 0,\r\n    variant: \"warning\",\r\n    name: \"Jane Hew\",\r\n    message: \"Hey! How is it going?\",\r\n    time: \"9:32\",\r\n  },\r\n  {\r\n    id: 1,\r\n    variant: \"success\",\r\n    name: \"Lloyd Brown\",\r\n    message: \"Check out my new Dashboard\",\r\n    time: \"9:18\",\r\n  },\r\n  {\r\n    id: 2,\r\n    variant: \"primary\",\r\n    name: \"Mark Winstein\",\r\n    message: \"I want rearrange the appointment\",\r\n    time: \"9:15\",\r\n  },\r\n  {\r\n    id: 3,\r\n    variant: \"secondary\",\r\n    name: \"Liana Dutti\",\r\n    message: \"Good news from sale department\",\r\n    time: \"9:09\",\r\n  },\r\n];\r\n\r\nconst notifications = [\r\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\r\n  {\r\n    id: 1,\r\n    color: \"success\",\r\n    type: \"info\",\r\n    message: \"What is the best way to get ...\",\r\n  },\r\n  {\r\n    id: 2,\r\n    color: \"secondary\",\r\n    type: \"notification\",\r\n    message: \"This is just a simple notification\",\r\n  },\r\n  {\r\n    id: 3,\r\n    color: \"primary\",\r\n    type: \"e-commerce\",\r\n    message: \"12 new orders has arrived today\",\r\n  },\r\n];\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n  let history = useHistory();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [mailMenu, setMailMenu] = useState(null);\r\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\r\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\r\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var [isSearchOpen, setSearchOpen] = useState(false);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowBackIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\r\n          React Material Admin\r\n        </Typography>\r\n        <div className={classes.grow} />\r\n        {/* <Button component={Link} href=\"https://flatlogic.com/templates/react-material-admin-full\" variant={\"outlined\"} color={\"secondary\"} className={classes.purchaseBtn}>Unlock full version</Button> */}\r\n        <div\r\n          className={classNames(classes.search, {\r\n            [classes.searchFocused]: isSearchOpen,\r\n          })}\r\n        >\r\n          <div\r\n            className={classNames(classes.searchIcon, {\r\n              [classes.searchIconOpened]: isSearchOpen,\r\n            })}\r\n            onClick={() => setSearchOpen(!isSearchOpen)}\r\n          >\r\n            <SearchIcon classes={{ root: classes.headerIcon }} />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search…\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n          />\r\n        </div>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={(e) => {\r\n            setNotificationsMenu(e.currentTarget);\r\n            setIsNotificationsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isNotificationsUnread ? notifications.length : null}\r\n            color=\"warning\"\r\n          >\r\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={(e) => {\r\n            setMailMenu(e.currentTarget);\r\n            setIsMailsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isMailsUnread ? messages.length : null}\r\n            color=\"secondary\"\r\n          >\r\n            <MailIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={(e) => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <AccountIcon classes={{ root: classes.headerIcon }} />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"mail-menu\"\r\n          open={Boolean(mailMenu)}\r\n          anchorEl={mailMenu}\r\n          onClose={() => setMailMenu(null)}\r\n          MenuListProps={{ className: classes.headerMenuList }}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              New Messages\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"secondary\"\r\n            >\r\n              {messages.length} New Messages\r\n            </Typography>\r\n          </div>\r\n          {messages.map((message) => (\r\n            <MenuItem key={message.id} className={classes.messageNotification}>\r\n              <div className={classes.messageNotificationSide}>\r\n                <UserAvatar color={message.variant} name={message.name} />\r\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.time}\r\n                </Typography>\r\n              </div>\r\n              <div\r\n                className={classNames(\r\n                  classes.messageNotificationSide,\r\n                  classes.messageNotificationBodySide,\r\n                )}\r\n              >\r\n                <Typography weight=\"medium\" gutterBottom>\r\n                  {message.name}\r\n                </Typography>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.message}\r\n                </Typography>\r\n              </div>\r\n            </MenuItem>\r\n          ))}\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            aria-label=\"Add\"\r\n            className={classes.sendMessageButton}\r\n          >\r\n            Send New Message\r\n            <SendIcon className={classes.sendButtonIcon} />\r\n          </Fab>\r\n        </Menu>\r\n        <Menu\r\n          id=\"notifications-menu\"\r\n          open={Boolean(notificationsMenu)}\r\n          anchorEl={notificationsMenu}\r\n          onClose={() => setNotificationsMenu(null)}\r\n          className={classes.headerMenu}\r\n          disableAutoFocusItem\r\n        >\r\n          {notifications.map((notification) => (\r\n            <MenuItem\r\n              key={notification.id}\r\n              onClick={() => setNotificationsMenu(null)}\r\n              className={classes.headerMenuItem}\r\n            >\r\n              <Notification {...notification} typographyVariant=\"inherit\" />\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              John Smith\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"primary\"\r\n              href=\"https://flatlogic.com\"\r\n            >\r\n              Flalogic.com\r\n            </Typography>\r\n          </div>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\r\n          </MenuItem>\r\n          <div className={classes.profileMenuUser}>\r\n            {/* <Link to=\"/\"> */}\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                localStorage.removeItem(\"id_token\");\r\n                history.push(\"/login\");\r\n              }}\r\n            >\r\n              Sign Out\r\n            </Typography>\r\n            {/* </Link> */}\r\n          </div>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","D:\\A Hardik\\A React js\\adminpanel\\src\\Services\\ApiService.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\dashboard\\components\\Category\\Category.js",["419","420","421"],"import React from \"react\";\r\n\r\nimport {\r\n  Table,\r\n  TableRow,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"../../styles\";\r\n\r\nconst states = {\r\n  sent: \"success\",\r\n  pending: \"warning\",\r\n  declined: \"secondary\",\r\n};\r\n\r\nexport default function TableComponent({ data }) {\r\n  const classes = useStyles();\r\n  var keys = Object.keys(data[0]).map((i) => i.toUpperCase());\r\n  // keys.shift(); // delete \"id\" key\r\n\r\n  return (\r\n    <Table className=\"mb-0\">\r\n      <TableHead>\r\n        <TableRow>\r\n          {keys.map((key) => (\r\n            <TableCell key={key}>{key}</TableCell>\r\n          ))}\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {data.map(({ id, name, phoneno, email, action }) => (\r\n          <TableRow key={id}>\r\n            <TableCell className=\"pl-3 fw-normal\">{name}</TableCell>\r\n            <TableCell>{phoneno}</TableCell>\r\n            <TableCell>{email}</TableCell>\r\n            <TableCell>{action}</TableCell>\r\n            {/* <TableCell>{date}</TableCell>\r\n            <TableCell>{city}</TableCell> */}\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  );\r\n}\r\n","D:\\A Hardik\\A React js\\adminpanel\\src\\components\\PageTitle\\PageTitle.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\components\\Widget\\Widget.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\icons\\styles.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\dashboard\\mock.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\dashboard\\styles.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\components\\Sidebar\\styles.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\dashboard\\components\\Table\\Table.js",["422","423","424"],"D:\\A Hardik\\A React js\\adminpanel\\src\\components\\Sidebar\\components\\Dot.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\components\\Header\\styles.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\components\\Notification\\Notification.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\components\\Wrappers\\Wrappers.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\typography\\styles.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\notifications\\styles.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\maps\\styles.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\components\\UserAvatar\\UserAvatar.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\charts\\components\\ApexHeatmap.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\charts\\components\\ApexLineChart.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\components\\Widget\\styles.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\components\\PageTitle\\styles.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\components\\Notification\\styles.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\components\\UserAvatar\\styles.js",[],"D:\\A Hardik\\A React js\\adminpanel\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],{"ruleId":"425","replacedBy":"426"},{"ruleId":"427","replacedBy":"428"},{"ruleId":"429","severity":1,"message":"430","line":7,"column":3,"nodeType":"431","messageId":"432","endLine":7,"endColumn":13},{"ruleId":"429","severity":1,"message":"433","line":12,"column":8,"nodeType":"431","messageId":"432","endLine":12,"endColumn":13},{"ruleId":"429","severity":1,"message":"434","line":13,"column":8,"nodeType":"431","messageId":"432","endLine":13,"endColumn":18},{"ruleId":"429","severity":1,"message":"435","line":14,"column":8,"nodeType":"431","messageId":"432","endLine":14,"endColumn":24},{"ruleId":"429","severity":1,"message":"436","line":15,"column":8,"nodeType":"431","messageId":"432","endLine":15,"endColumn":19},{"ruleId":"429","severity":1,"message":"437","line":16,"column":8,"nodeType":"431","messageId":"432","endLine":16,"endColumn":17},{"ruleId":"429","severity":1,"message":"438","line":17,"column":8,"nodeType":"431","messageId":"432","endLine":17,"endColumn":16},{"ruleId":"429","severity":1,"message":"439","line":22,"column":8,"nodeType":"431","messageId":"432","endLine":22,"endColumn":12},{"ruleId":"429","severity":1,"message":"440","line":24,"column":10,"nodeType":"431","messageId":"432","endLine":24,"endColumn":15},{"ruleId":"441","severity":1,"message":"442","line":66,"column":6,"nodeType":"443","endLine":66,"endColumn":8,"suggestions":"444"},{"ruleId":"429","severity":1,"message":"445","line":77,"column":18,"nodeType":"431","messageId":"432","endLine":77,"endColumn":24},{"ruleId":"446","severity":1,"message":"447","line":160,"column":11,"nodeType":"448","endLine":160,"endColumn":60},{"ruleId":"429","severity":1,"message":"449","line":1,"column":27,"nodeType":"431","messageId":"432","endLine":1,"endColumn":36},{"ruleId":"429","severity":1,"message":"430","line":7,"column":3,"nodeType":"431","messageId":"432","endLine":7,"endColumn":13},{"ruleId":"429","severity":1,"message":"433","line":12,"column":8,"nodeType":"431","messageId":"432","endLine":12,"endColumn":13},{"ruleId":"429","severity":1,"message":"434","line":13,"column":8,"nodeType":"431","messageId":"432","endLine":13,"endColumn":18},{"ruleId":"429","severity":1,"message":"435","line":14,"column":8,"nodeType":"431","messageId":"432","endLine":14,"endColumn":24},{"ruleId":"429","severity":1,"message":"436","line":15,"column":8,"nodeType":"431","messageId":"432","endLine":15,"endColumn":19},{"ruleId":"429","severity":1,"message":"437","line":16,"column":8,"nodeType":"431","messageId":"432","endLine":16,"endColumn":17},{"ruleId":"429","severity":1,"message":"438","line":17,"column":8,"nodeType":"431","messageId":"432","endLine":17,"endColumn":16},{"ruleId":"429","severity":1,"message":"439","line":22,"column":8,"nodeType":"431","messageId":"432","endLine":22,"endColumn":12},{"ruleId":"429","severity":1,"message":"440","line":24,"column":10,"nodeType":"431","messageId":"432","endLine":24,"endColumn":15},{"ruleId":"429","severity":1,"message":"445","line":52,"column":18,"nodeType":"431","messageId":"432","endLine":52,"endColumn":24},{"ruleId":"446","severity":1,"message":"447","line":140,"column":11,"nodeType":"448","endLine":140,"endColumn":60},{"ruleId":"429","severity":1,"message":"450","line":29,"column":5,"nodeType":"431","messageId":"432","endLine":29,"endColumn":17},{"ruleId":"429","severity":1,"message":"445","line":30,"column":18,"nodeType":"431","messageId":"432","endLine":30,"endColumn":24},{"ruleId":"446","severity":1,"message":"447","line":85,"column":13,"nodeType":"448","endLine":92,"endColumn":15},{"ruleId":"429","severity":1,"message":"430","line":7,"column":3,"nodeType":"431","messageId":"432","endLine":7,"endColumn":13},{"ruleId":"429","severity":1,"message":"433","line":13,"column":8,"nodeType":"431","messageId":"432","endLine":13,"endColumn":13},{"ruleId":"429","severity":1,"message":"434","line":14,"column":8,"nodeType":"431","messageId":"432","endLine":14,"endColumn":18},{"ruleId":"429","severity":1,"message":"435","line":15,"column":8,"nodeType":"431","messageId":"432","endLine":15,"endColumn":24},{"ruleId":"429","severity":1,"message":"436","line":16,"column":8,"nodeType":"431","messageId":"432","endLine":16,"endColumn":19},{"ruleId":"429","severity":1,"message":"437","line":17,"column":8,"nodeType":"431","messageId":"432","endLine":17,"endColumn":17},{"ruleId":"429","severity":1,"message":"438","line":18,"column":8,"nodeType":"431","messageId":"432","endLine":18,"endColumn":16},{"ruleId":"429","severity":1,"message":"439","line":23,"column":8,"nodeType":"431","messageId":"432","endLine":23,"endColumn":12},{"ruleId":"429","severity":1,"message":"440","line":25,"column":10,"nodeType":"431","messageId":"432","endLine":25,"endColumn":15},{"ruleId":"429","severity":1,"message":"451","line":42,"column":10,"nodeType":"431","messageId":"432","endLine":42,"endColumn":15},{"ruleId":"429","severity":1,"message":"452","line":42,"column":17,"nodeType":"431","messageId":"432","endLine":42,"endColumn":25},{"ruleId":"429","severity":1,"message":"453","line":49,"column":9,"nodeType":"431","messageId":"432","endLine":49,"endColumn":13},{"ruleId":"441","severity":1,"message":"442","line":88,"column":6,"nodeType":"443","endLine":88,"endColumn":8,"suggestions":"454"},{"ruleId":"429","severity":1,"message":"445","line":103,"column":18,"nodeType":"431","messageId":"432","endLine":103,"endColumn":24},{"ruleId":"446","severity":1,"message":"447","line":245,"column":13,"nodeType":"448","endLine":252,"endColumn":15},{"ruleId":"429","severity":1,"message":"430","line":7,"column":3,"nodeType":"431","messageId":"432","endLine":7,"endColumn":13},{"ruleId":"429","severity":1,"message":"433","line":12,"column":8,"nodeType":"431","messageId":"432","endLine":12,"endColumn":13},{"ruleId":"429","severity":1,"message":"434","line":13,"column":8,"nodeType":"431","messageId":"432","endLine":13,"endColumn":18},{"ruleId":"429","severity":1,"message":"435","line":14,"column":8,"nodeType":"431","messageId":"432","endLine":14,"endColumn":24},{"ruleId":"429","severity":1,"message":"436","line":15,"column":8,"nodeType":"431","messageId":"432","endLine":15,"endColumn":19},{"ruleId":"429","severity":1,"message":"437","line":16,"column":8,"nodeType":"431","messageId":"432","endLine":16,"endColumn":17},{"ruleId":"429","severity":1,"message":"438","line":17,"column":8,"nodeType":"431","messageId":"432","endLine":17,"endColumn":16},{"ruleId":"429","severity":1,"message":"439","line":22,"column":8,"nodeType":"431","messageId":"432","endLine":22,"endColumn":12},{"ruleId":"429","severity":1,"message":"440","line":24,"column":10,"nodeType":"431","messageId":"432","endLine":24,"endColumn":15},{"ruleId":"441","severity":1,"message":"442","line":61,"column":6,"nodeType":"443","endLine":61,"endColumn":8,"suggestions":"455"},{"ruleId":"429","severity":1,"message":"445","line":71,"column":18,"nodeType":"431","messageId":"432","endLine":71,"endColumn":24},{"ruleId":"429","severity":1,"message":"430","line":7,"column":3,"nodeType":"431","messageId":"432","endLine":7,"endColumn":13},{"ruleId":"429","severity":1,"message":"433","line":12,"column":8,"nodeType":"431","messageId":"432","endLine":12,"endColumn":13},{"ruleId":"429","severity":1,"message":"434","line":13,"column":8,"nodeType":"431","messageId":"432","endLine":13,"endColumn":18},{"ruleId":"429","severity":1,"message":"435","line":14,"column":8,"nodeType":"431","messageId":"432","endLine":14,"endColumn":24},{"ruleId":"429","severity":1,"message":"436","line":15,"column":8,"nodeType":"431","messageId":"432","endLine":15,"endColumn":19},{"ruleId":"429","severity":1,"message":"437","line":16,"column":8,"nodeType":"431","messageId":"432","endLine":16,"endColumn":17},{"ruleId":"429","severity":1,"message":"438","line":17,"column":8,"nodeType":"431","messageId":"432","endLine":17,"endColumn":16},{"ruleId":"429","severity":1,"message":"439","line":22,"column":8,"nodeType":"431","messageId":"432","endLine":22,"endColumn":12},{"ruleId":"429","severity":1,"message":"440","line":24,"column":10,"nodeType":"431","messageId":"432","endLine":24,"endColumn":15},{"ruleId":"441","severity":1,"message":"442","line":62,"column":6,"nodeType":"443","endLine":62,"endColumn":8,"suggestions":"456"},{"ruleId":"429","severity":1,"message":"445","line":76,"column":18,"nodeType":"431","messageId":"432","endLine":76,"endColumn":24},{"ruleId":"446","severity":1,"message":"447","line":156,"column":11,"nodeType":"448","endLine":156,"endColumn":60},{"ruleId":"429","severity":1,"message":"449","line":1,"column":27,"nodeType":"431","messageId":"432","endLine":1,"endColumn":36},{"ruleId":"429","severity":1,"message":"430","line":6,"column":3,"nodeType":"431","messageId":"432","endLine":6,"endColumn":13},{"ruleId":"429","severity":1,"message":"433","line":11,"column":8,"nodeType":"431","messageId":"432","endLine":11,"endColumn":13},{"ruleId":"429","severity":1,"message":"434","line":12,"column":8,"nodeType":"431","messageId":"432","endLine":12,"endColumn":18},{"ruleId":"429","severity":1,"message":"435","line":13,"column":8,"nodeType":"431","messageId":"432","endLine":13,"endColumn":24},{"ruleId":"429","severity":1,"message":"436","line":14,"column":8,"nodeType":"431","messageId":"432","endLine":14,"endColumn":19},{"ruleId":"429","severity":1,"message":"437","line":15,"column":8,"nodeType":"431","messageId":"432","endLine":15,"endColumn":17},{"ruleId":"429","severity":1,"message":"438","line":16,"column":8,"nodeType":"431","messageId":"432","endLine":16,"endColumn":16},{"ruleId":"429","severity":1,"message":"439","line":21,"column":8,"nodeType":"431","messageId":"432","endLine":21,"endColumn":12},{"ruleId":"429","severity":1,"message":"445","line":49,"column":18,"nodeType":"431","messageId":"432","endLine":49,"endColumn":24},{"ruleId":"446","severity":1,"message":"447","line":138,"column":11,"nodeType":"448","endLine":138,"endColumn":60},{"ruleId":"429","severity":1,"message":"430","line":6,"column":3,"nodeType":"431","messageId":"432","endLine":6,"endColumn":13},{"ruleId":"429","severity":1,"message":"433","line":11,"column":8,"nodeType":"431","messageId":"432","endLine":11,"endColumn":13},{"ruleId":"429","severity":1,"message":"434","line":12,"column":8,"nodeType":"431","messageId":"432","endLine":12,"endColumn":18},{"ruleId":"429","severity":1,"message":"435","line":13,"column":8,"nodeType":"431","messageId":"432","endLine":13,"endColumn":24},{"ruleId":"429","severity":1,"message":"436","line":14,"column":8,"nodeType":"431","messageId":"432","endLine":14,"endColumn":19},{"ruleId":"429","severity":1,"message":"437","line":15,"column":8,"nodeType":"431","messageId":"432","endLine":15,"endColumn":17},{"ruleId":"429","severity":1,"message":"438","line":16,"column":8,"nodeType":"431","messageId":"432","endLine":16,"endColumn":16},{"ruleId":"429","severity":1,"message":"439","line":21,"column":22,"nodeType":"431","messageId":"432","endLine":21,"endColumn":26},{"ruleId":"429","severity":1,"message":"457","line":9,"column":8,"nodeType":"431","messageId":"432","endLine":9,"endColumn":14},{"ruleId":"429","severity":1,"message":"458","line":10,"column":8,"nodeType":"431","messageId":"432","endLine":10,"endColumn":13},{"ruleId":"429","severity":1,"message":"459","line":12,"column":10,"nodeType":"431","messageId":"432","endLine":12,"endColumn":22},{"ruleId":"429","severity":1,"message":"460","line":20,"column":8,"nodeType":"431","messageId":"432","endLine":20,"endColumn":14},{"ruleId":"429","severity":1,"message":"461","line":21,"column":8,"nodeType":"431","messageId":"432","endLine":21,"endColumn":16},{"ruleId":"429","severity":1,"message":"462","line":92,"column":11,"nodeType":"431","messageId":"432","endLine":92,"endColumn":14},{"ruleId":"463","severity":1,"message":"464","line":92,"column":42,"nodeType":"465","messageId":"466","endLine":92,"endColumn":44},{"ruleId":"463","severity":1,"message":"467","line":98,"column":21,"nodeType":"465","messageId":"466","endLine":98,"endColumn":23},{"ruleId":"429","severity":1,"message":"468","line":101,"column":11,"nodeType":"431","messageId":"432","endLine":101,"endColumn":19},{"ruleId":"429","severity":1,"message":"469","line":5,"column":8,"nodeType":"431","messageId":"432","endLine":5,"endColumn":13},{"ruleId":"429","severity":1,"message":"470","line":6,"column":8,"nodeType":"431","messageId":"432","endLine":6,"endColumn":12},{"ruleId":"429","severity":1,"message":"439","line":7,"column":10,"nodeType":"431","messageId":"432","endLine":7,"endColumn":14},{"ruleId":"429","severity":1,"message":"471","line":9,"column":8,"nodeType":"431","messageId":"432","endLine":9,"endColumn":15},{"ruleId":"429","severity":1,"message":"459","line":14,"column":10,"nodeType":"431","messageId":"432","endLine":14,"endColumn":22},{"ruleId":"429","severity":1,"message":"460","line":26,"column":8,"nodeType":"431","messageId":"432","endLine":26,"endColumn":14},{"ruleId":"429","severity":1,"message":"462","line":98,"column":11,"nodeType":"431","messageId":"432","endLine":98,"endColumn":14},{"ruleId":"463","severity":1,"message":"464","line":98,"column":42,"nodeType":"465","messageId":"466","endLine":98,"endColumn":44},{"ruleId":"463","severity":1,"message":"467","line":104,"column":21,"nodeType":"465","messageId":"466","endLine":104,"endColumn":23},{"ruleId":"429","severity":1,"message":"468","line":107,"column":11,"nodeType":"431","messageId":"432","endLine":107,"endColumn":19},{"ruleId":"429","severity":1,"message":"469","line":5,"column":8,"nodeType":"431","messageId":"432","endLine":5,"endColumn":13},{"ruleId":"429","severity":1,"message":"470","line":6,"column":8,"nodeType":"431","messageId":"432","endLine":6,"endColumn":12},{"ruleId":"429","severity":1,"message":"439","line":7,"column":10,"nodeType":"431","messageId":"432","endLine":7,"endColumn":14},{"ruleId":"429","severity":1,"message":"471","line":9,"column":8,"nodeType":"431","messageId":"432","endLine":9,"endColumn":15},{"ruleId":"429","severity":1,"message":"459","line":14,"column":10,"nodeType":"431","messageId":"432","endLine":14,"endColumn":22},{"ruleId":"429","severity":1,"message":"460","line":26,"column":8,"nodeType":"431","messageId":"432","endLine":26,"endColumn":14},{"ruleId":"429","severity":1,"message":"472","line":46,"column":9,"nodeType":"431","messageId":"432","endLine":46,"endColumn":14},{"ruleId":"429","severity":1,"message":"462","line":100,"column":11,"nodeType":"431","messageId":"432","endLine":100,"endColumn":14},{"ruleId":"463","severity":1,"message":"464","line":100,"column":42,"nodeType":"465","messageId":"466","endLine":100,"endColumn":44},{"ruleId":"463","severity":1,"message":"467","line":106,"column":21,"nodeType":"465","messageId":"466","endLine":106,"endColumn":23},{"ruleId":"429","severity":1,"message":"468","line":109,"column":11,"nodeType":"431","messageId":"432","endLine":109,"endColumn":19},{"ruleId":"429","severity":1,"message":"469","line":5,"column":8,"nodeType":"431","messageId":"432","endLine":5,"endColumn":13},{"ruleId":"429","severity":1,"message":"470","line":6,"column":8,"nodeType":"431","messageId":"432","endLine":6,"endColumn":12},{"ruleId":"429","severity":1,"message":"439","line":7,"column":10,"nodeType":"431","messageId":"432","endLine":7,"endColumn":14},{"ruleId":"429","severity":1,"message":"471","line":9,"column":8,"nodeType":"431","messageId":"432","endLine":9,"endColumn":15},{"ruleId":"429","severity":1,"message":"459","line":15,"column":10,"nodeType":"431","messageId":"432","endLine":15,"endColumn":22},{"ruleId":"429","severity":1,"message":"460","line":20,"column":8,"nodeType":"431","messageId":"432","endLine":20,"endColumn":14},{"ruleId":"429","severity":1,"message":"462","line":90,"column":11,"nodeType":"431","messageId":"432","endLine":90,"endColumn":14},{"ruleId":"463","severity":1,"message":"464","line":90,"column":42,"nodeType":"465","messageId":"466","endLine":90,"endColumn":44},{"ruleId":"463","severity":1,"message":"467","line":96,"column":21,"nodeType":"465","messageId":"466","endLine":96,"endColumn":23},{"ruleId":"429","severity":1,"message":"468","line":99,"column":11,"nodeType":"431","messageId":"432","endLine":99,"endColumn":19},{"ruleId":"429","severity":1,"message":"473","line":4,"column":3,"nodeType":"431","messageId":"432","endLine":4,"endColumn":17},{"ruleId":"429","severity":1,"message":"474","line":5,"column":3,"nodeType":"431","messageId":"432","endLine":5,"endColumn":9},{"ruleId":"429","severity":1,"message":"475","line":6,"column":3,"nodeType":"431","messageId":"432","endLine":6,"endColumn":16},{"ruleId":"429","severity":1,"message":"476","line":7,"column":3,"nodeType":"431","messageId":"432","endLine":7,"endColumn":11},{"ruleId":"429","severity":1,"message":"477","line":12,"column":3,"nodeType":"431","messageId":"432","endLine":12,"endColumn":22},{"ruleId":"429","severity":1,"message":"478","line":13,"column":3,"nodeType":"431","messageId":"432","endLine":13,"endColumn":16},{"ruleId":"429","severity":1,"message":"479","line":14,"column":3,"nodeType":"431","messageId":"432","endLine":14,"endColumn":12},{"ruleId":"429","severity":1,"message":"480","line":15,"column":3,"nodeType":"431","messageId":"432","endLine":15,"endColumn":12},{"ruleId":"429","severity":1,"message":"481","line":16,"column":3,"nodeType":"431","messageId":"432","endLine":16,"endColumn":7},{"ruleId":"429","severity":1,"message":"482","line":17,"column":3,"nodeType":"431","messageId":"432","endLine":17,"endColumn":7},{"ruleId":"429","severity":1,"message":"483","line":18,"column":3,"nodeType":"431","messageId":"432","endLine":18,"endColumn":11},{"ruleId":"429","severity":1,"message":"484","line":19,"column":3,"nodeType":"431","messageId":"432","endLine":19,"endColumn":6},{"ruleId":"429","severity":1,"message":"485","line":20,"column":3,"nodeType":"431","messageId":"432","endLine":20,"endColumn":7},{"ruleId":"429","severity":1,"message":"486","line":21,"column":3,"nodeType":"431","messageId":"432","endLine":21,"endColumn":8},{"ruleId":"429","severity":1,"message":"487","line":22,"column":3,"nodeType":"431","messageId":"432","endLine":22,"endColumn":8},{"ruleId":"429","severity":1,"message":"460","line":30,"column":8,"nodeType":"431","messageId":"432","endLine":30,"endColumn":14},{"ruleId":"429","severity":1,"message":"430","line":32,"column":10,"nodeType":"431","messageId":"432","endLine":32,"endColumn":20},{"ruleId":"429","severity":1,"message":"488","line":33,"column":8,"nodeType":"431","messageId":"432","endLine":33,"endColumn":11},{"ruleId":"429","severity":1,"message":"489","line":34,"column":8,"nodeType":"431","messageId":"432","endLine":34,"endColumn":13},{"ruleId":"429","severity":1,"message":"490","line":37,"column":7,"nodeType":"431","messageId":"432","endLine":37,"endColumn":20},{"ruleId":"429","severity":1,"message":"491","line":38,"column":7,"nodeType":"431","messageId":"432","endLine":38,"endColumn":19},{"ruleId":"429","severity":1,"message":"492","line":46,"column":7,"nodeType":"431","messageId":"432","endLine":46,"endColumn":14},{"ruleId":"429","severity":1,"message":"493","line":47,"column":7,"nodeType":"431","messageId":"432","endLine":47,"endColumn":12},{"ruleId":"429","severity":1,"message":"494","line":50,"column":8,"nodeType":"431","messageId":"432","endLine":50,"endColumn":22},{"ruleId":"429","severity":1,"message":"495","line":50,"column":24,"nodeType":"431","messageId":"432","endLine":50,"endColumn":41},{"ruleId":"429","severity":1,"message":"496","line":6,"column":24,"nodeType":"431","messageId":"432","endLine":6,"endColumn":41},{"ruleId":"429","severity":1,"message":"497","line":7,"column":17,"nodeType":"431","messageId":"432","endLine":7,"endColumn":31},{"ruleId":"429","severity":1,"message":"498","line":8,"column":17,"nodeType":"431","messageId":"432","endLine":8,"endColumn":31},{"ruleId":"429","severity":1,"message":"499","line":9,"column":16,"nodeType":"431","messageId":"432","endLine":9,"endColumn":25},{"ruleId":"429","severity":1,"message":"500","line":10,"column":21,"nodeType":"431","messageId":"432","endLine":10,"endColumn":32},{"ruleId":"429","severity":1,"message":"501","line":11,"column":19,"nodeType":"431","messageId":"432","endLine":11,"endColumn":30},{"ruleId":"429","severity":1,"message":"502","line":12,"column":18,"nodeType":"431","messageId":"432","endLine":12,"endColumn":25},{"ruleId":"429","severity":1,"message":"488","line":27,"column":8,"nodeType":"431","messageId":"432","endLine":27,"endColumn":11},{"ruleId":"429","severity":1,"message":"439","line":11,"column":10,"nodeType":"431","messageId":"432","endLine":11,"endColumn":14},{"ruleId":"429","severity":1,"message":"503","line":30,"column":29,"nodeType":"431","messageId":"432","endLine":30,"endColumn":35},{"ruleId":"429","severity":1,"message":"504","line":102,"column":7,"nodeType":"431","messageId":"432","endLine":102,"endColumn":19},{"ruleId":"429","severity":1,"message":"505","line":9,"column":3,"nodeType":"431","messageId":"432","endLine":9,"endColumn":7},{"ruleId":"429","severity":1,"message":"506","line":13,"column":7,"nodeType":"431","messageId":"432","endLine":13,"endColumn":13},{"ruleId":"429","severity":1,"message":"492","line":20,"column":9,"nodeType":"431","messageId":"432","endLine":20,"endColumn":16},{"ruleId":"429","severity":1,"message":"505","line":9,"column":3,"nodeType":"431","messageId":"432","endLine":9,"endColumn":7},{"ruleId":"429","severity":1,"message":"506","line":13,"column":7,"nodeType":"431","messageId":"432","endLine":13,"endColumn":13},{"ruleId":"429","severity":1,"message":"492","line":20,"column":9,"nodeType":"431","messageId":"432","endLine":20,"endColumn":16},"no-native-reassign",["507"],"no-negated-in-lhs",["508"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'Checkbox' is defined but never used.","'Link' is defined but never used.","'Input' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id', 'mydata', and 'setValue'. Either include them or remove the dependency array.","ArrayExpression",["509"],"'errors' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'handleSubmit' is assigned a value but never used.","'files' is assigned a value but never used.","'setFiles' is assigned a value but never used.","'nums' is assigned a value but never used.",["510"],["511"],["512"],"'Avatar' is defined but never used.","'Image' is defined but never used.","'confirmAlert' is defined but never used.","'Widget' is defined but never used.","'Category' is defined but never used.","'cmn' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a return value from arrow function.","'data_ids' is assigned a value but never used.","'axios' is defined but never used.","'mock' is defined but never used.","'Tooltip' is defined but never used.","'token' is assigned a value but never used.","'LinearProgress' is defined but never used.","'Select' is defined but never used.","'OutlinedInput' is defined but never used.","'MenuItem' is defined but never used.","'ResponsiveContainer' is defined but never used.","'ComposedChart' is defined but never used.","'AreaChart' is defined but never used.","'LineChart' is defined but never used.","'Line' is defined but never used.","'Area' is defined but never used.","'PieChart' is defined but never used.","'Pie' is defined but never used.","'Cell' is defined but never used.","'YAxis' is defined but never used.","'XAxis' is defined but never used.","'Dot' is defined but never used.","'Table' is defined but never used.","'mainChartData' is assigned a value but never used.","'PieChartData' is assigned a value but never used.","'classes' is assigned a value but never used.","'theme' is assigned a value but never used.","'mainChartState' is assigned a value but never used.","'setMainChartState' is assigned a value but never used.","'NotificationsIcon' is defined but never used.","'TypographyIcon' is defined but never used.","'UIElementsIcon' is defined but never used.","'TableIcon' is defined but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'Button' is defined but never used.","'userDispatch' is assigned a value but never used.","'Chip' is defined but never used.","'states' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"513","fix":"514"},{"desc":"513","fix":"515"},{"desc":"513","fix":"516"},{"desc":"513","fix":"517"},"Update the dependencies array to be: [id, mydata, setValue]",{"range":"518","text":"519"},{"range":"520","text":"519"},{"range":"521","text":"519"},{"range":"522","text":"519"},[2029,2031],"[id, mydata, setValue]",[3055,3057],[2019,2021],[2187,2189]]